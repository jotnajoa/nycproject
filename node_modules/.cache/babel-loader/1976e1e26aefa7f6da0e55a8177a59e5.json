{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js??ref--13-0!/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByBorough/index.js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByBorough/index.js","mtime":1624333304811},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9zb29ua3BhaWsvRGVza3RvcC9OWUMgUHJvamVjdC9jb2RlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJlY2luY3RHZW9Kc29uOiB1bmRlZmluZWQsCiAgICAgIHByZWNpbmN0Q29udG91ckpzb246IHVuZGVmaW5lZAogICAgfTsKICB9LAogIG11dGF0aW9uczogewogICAgZ2VuZXJhdGVHZW9Kc29uOiBmdW5jdGlvbiBnZW5lcmF0ZUdlb0pzb24oc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUucHJlY2luY3RHZW9Kc29uID0gcGF5bG9hZDsKICAgIH0sCiAgICBnZW5lcmF0ZUNvbnRvdXJHZW9Kc29uOiBmdW5jdGlvbiBnZW5lcmF0ZUNvbnRvdXJHZW9Kc29uKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnByZWNpbmN0Q29udG91ckpzb24gPSBwYXlsb2FkOwogICAgfSwKICAgIGNoYW5nZUhvdmVyc3RhdGU6IGZ1bmN0aW9uIGNoYW5nZUhvdmVyc3RhdGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgY29uc29sZS5sb2coJ2ltIGluIHRoZSBtb2R1bGUnLCBwYXlsb2FkKTsKICAgICAgdmFyIHRhcmdldEluZGV4ID0gdW5kZWZpbmVkOwogICAgICB2YXIgcHJlY2luY3RBcnJheSA9IEFycmF5LmZyb20oc3RhdGUucHJlY2luY3RHZW9Kc29uLmZlYXR1cmVzKTsKICAgICAgcHJlY2luY3RBcnJheS5mb3JFYWNoKGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgY29uc29sZS5sb2coZC5wcm9wZXJ0aWVzLnByZWNpbmN0LCBpKTsKCiAgICAgICAgaWYgKGQucHJvcGVydGllcy5wcmVjaW5jdCA9PSBwYXlsb2FkKSB7CiAgICAgICAgICB0YXJnZXRJbmRleCA9IGk7IC8vIGNvbnNvbGUubG9nKCdjaGVjayBpZiB0YXJnZXQgaXMgc2VsZWN0ZWQnLAoKICAgICAgICAgIHN0YXRlLnByZWNpbmN0R2VvSnNvbi5mZWF0dXJlc1siIi5jb25jYXQodGFyZ2V0SW5kZXgpXS5ob3ZlcmVkID0gdHJ1ZTsgLy8gKQogICAgICAgIH0KICAgICAgfSk7IC8vIHN0YXRlLnByZWNpbmN0R2VvSnNvbi5mZWF0dXJlcy5mb3JFYWNoKChkKSA9PiB7CiAgICAgIC8vICAgICBpZiAoZC5wcmVjaW5jdCA9PSBwYXlsb2FkKSB7CiAgICAgIC8vICAgICAgICAgY29uc29sZS5sb2coZC5wcmVjaW5jdCwgJ2lzIGdvaW5nIHRvIGJlIHRydWUnKQogICAgICAvLyAgICAgICAgIGQuaG92ZXJlZCA9IHRydWUKICAgICAgLy8gICAgIH0KICAgICAgLy8gfSkKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGxlbmd0aE9mQ291bnRvdXI6IGZ1bmN0aW9uIGxlbmd0aE9mQ291bnRvdXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnByZWNpbmN0Q29udG91ckdlb0pzb24uZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZS5sZW5ndGg7CiAgICB9LAogICAgcHJlY2luY3RHZW9Kc29uOiBmdW5jdGlvbiBwcmVjaW5jdEdlb0pzb24oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnByZWNpbmN0R2VvSnNvbjsKICAgIH0sCiAgICBwcmVjaW5jdENvbnRvdXJKc29uOiBmdW5jdGlvbiBwcmVjaW5jdENvbnRvdXJKc29uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcmVjaW5jdENvbnRvdXJKc29uOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgY2hhbmdlSG92ZXJzdGF0ZTogZnVuY3Rpb24gY2hhbmdlSG92ZXJzdGF0ZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdjaGFuZ2VIb3ZlcnN0YXRlJywgcGF5bG9hZCk7CiAgICB9LAogICAgZ2VuZXJhdGVHZW9Kc29uOiBmdW5jdGlvbiBnZW5lcmF0ZUdlb0pzb24oY29udGV4dCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGQzLmpzb24oInByZWNpbmN0R2VvZGF0YS5nZW9qc29uIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YS5mZWF0dXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgIGQuaG92ZXJlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICBkLmNsaWNrZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2dlbmVyYXRlR2VvSnNvbicsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2VuZXJhdGVDb250b3VyR2VvSnNvbjogZnVuY3Rpb24gZ2VuZXJhdGVDb250b3VyR2VvSnNvbihjb250ZXh0KSB7CiAgICAgIHZhciBvdXRsaW5lanNvbiA9IHsKICAgICAgICAndHlwZSc6ICdGZWF0dXJlQ29sbGVjdGlvbicsCiAgICAgICAgJ2ZlYXR1cmVzJzogW3sKICAgICAgICAgICd0eXBlJzogJ0ZlYXR1cmUnLAogICAgICAgICAgJ2dlb21ldHJ5JzogewogICAgICAgICAgICAndHlwZSc6ICdMaW5lU3RyaW5nJywKICAgICAgICAgICAgJ2Nvb3JkaW5hdGVzJzogW10KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICBjb250ZXh0LmdlbmVyYXRlQ29udG91ckdlb0pzb24ob3V0bGluZWpzb24pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByBorough/index.js"],"names":["d3","namespaced","state","precinctGeoJson","undefined","precinctContourJson","mutations","generateGeoJson","payload","generateContourGeoJson","changeHoverstate","console","log","targetIndex","precinctArray","Array","from","features","forEach","d","i","properties","precinct","hovered","getters","lengthOfCountour","precinctContourGeoJson","geometry","coordinate","length","actions","context","commit","json","data","clicked","outlinejson"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            precinctGeoJson: undefined,\n            precinctContourJson: undefined,\n        }\n    },\n    mutations: {\n        generateGeoJson(state, payload) {\n            state.precinctGeoJson = payload\n        },\n        generateContourGeoJson(state, payload) {\n            state.precinctContourJson = payload\n        },\n        changeHoverstate(state, payload) {\n            console.log('im in the module', payload)\n\n            var targetIndex = undefined;\n            const precinctArray = Array.from(state.precinctGeoJson.features)\n            precinctArray.forEach((d, i) => {\n                console.log(d.properties.precinct, i)\n                if (d.properties.precinct == payload) {\n                    targetIndex = i;\n                    // console.log('check if target is selected',\n                    state.precinctGeoJson.features[`${targetIndex}`].hovered = true\n                        // )\n                }\n            })\n\n\n            // state.precinctGeoJson.features.forEach((d) => {\n            //     if (d.precinct == payload) {\n            //         console.log(d.precinct, 'is going to be true')\n            //         d.hovered = true\n            //     }\n\n            // })\n        }\n    },\n    getters: {\n        lengthOfCountour(state) {\n            return state.precinctContourGeoJson.features[0].geometry.coordinate.length\n        },\n        precinctGeoJson(state) {\n            return state.precinctGeoJson\n        },\n        precinctContourJson(state) {\n            return state.precinctContourJson\n        }\n    },\n    actions: {\n        changeHoverstate(context, payload) {\n            context.commit('changeHoverstate', payload)\n        },\n        async generateGeoJson(context) {\n            const data = await d3.json(`precinctGeodata.geojson`);\n            data.features.forEach((d) => {\n                d.hovered = false;\n                d.clicked = false;\n            })\n            context.commit('generateGeoJson', data)\n        },\n        generateContourGeoJson(context) {\n            var outlinejson = {\n                'type': 'FeatureCollection',\n                'features': [{\n                    'type': 'Feature',\n                    'geometry': {\n                        'type': 'LineString',\n                        'coordinates': []\n                    }\n                }]\n            };\n            context.generateContourGeoJson(outlinejson)\n        }\n    }\n}"]}]}