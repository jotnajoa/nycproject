{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/soonkpaik/Desktop/NYC Project/code/src/components/BoroughAnalysis.vue?vue&type=template&id=1f6edd88&scoped=true","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/components/BoroughAnalysis.vue","mtime":1624672949617},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/components/BoroughAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n        \n    <teleport to='body'>\n      <div class='tab'> \n          <div class=\"selection-tab\">\n              <div class='title-line white-text'>\n                  <div style ='margin-left:1rem' class='bold'>Borough Selection</div>\n                  <switch-form\n                  style='margin-right:1rem'\n                  :options='options'\n                  smallSelection=true>\n                  </switch-form>\n              </div>\n              <div class='borough-button'>\n                  <form class='form'>\n                      <div class=\"white-text light button\">\n                          <input type='radio' id='radio-one' name='button-one' value='Brooklyn'\n                          v-model='selectedCounty' />\n                          <label for='radio-one'>Brooklyn</label>\n\n                          <input type='radio' id='radio-two' name='button-two' value='Queens'\n                          v-model='selectedCounty' />\n                          <label for='radio-two'>Queens</label>\n\n                          <input type='radio' id='radio-three' name='button-three' value='Manhattan'\n                          v-model='selectedCounty' />\n                          <label for='radio-three'>Manhattan</label>\n\n                          <input type='radio' id='radio-four' name='button-four' value='Bronx'\n                          v-model='selectedCounty' />\n                          <label for='radio-four'>Bronx</label>\n                      </div>\n                  </form>\n              </div>\n          </div>\n\n        <div class='analysis-tab'>\n            <div class='borough-info-title blue-text small-text'>\n                <div>{{county}}</div>\n                <div>{{yearSelected}}</div>\n            </div>\n            <hr>\n            <div class='precinct-summary' v-if='selectedPrecinct'>\n                <div class='sub-section'>\n                    <div class='white-text medium'>{{selectedPrecinct}} Precinct</div>\n                    <div class='summary-stats orange-text super-big-text'>\n                        <div class='medium-big-text bold'>{{precinctTicket}} <span class='white-text medium-text medium'>Tickets</span> </div>\n                        <div class='medium-big-text bold'>{{precinctCostSum}} <span class='white-text medium-text medium'>USD</span> </div>\n                    </div>\n                </div>\n\n                <div class='sub-section'>\n                    <div class='white-text medium'>Borough Avg.</div>\n                    <div class='summary-stats orange-text super-big-text'>\n                        <div class='medium-big-text bold'>{{countyTicketAverage}} <span class='white-text medium-text medium'>Tickets</span> </div>\n                        <div class='medium-big-text bold'>{{countyCostAverage}} <span class='white-text medium-text medium'>USD</span> </div>\n                    </div>\n                </div>\n\n\n            </div>\n            <hr>\n            <div class='white-text medium-text medium graph-headline'>\n                <div>Parking Cost Distribution</div>\n                <div>legend sace</div>\n            </div>\n            <div class=\"cost-dist\" ref='lineGraphContainer'>\n                <line-graph class='graphcontainer'\n                :width='width'\n                :height='lineGraphheight'\n                :margin='margin'\n                :dataGroup='dataGroup'\n                :xAxisName='xAxisName'\n                :yAxisName='yAxisName'\n                :lineColors='lineColors'\n                ></line-graph>\n            </div>\n            <div class='white-text medium-text medium graph-headline'>\n                <div>Precinct vs Borough</div>\n            </div>\n            <div class='vsComparison'>\n                <div class='bar-graph-container'\n                v-for='(bargroup,index) in comparisonData' \n                :key='index'>\n                    <div class='bar-box' ref='barBox'>\n\n                        <div class='bar-graph orange' \n                        @mouseover='showBarTooltip(\"precinct\",index)'\n                        @mouseleave='hidBarTooltip()'\n                        :style=\"{height:bargroup.values.precinct+'px',\n                        transform:heightTranslate()\n                        }\">\n                        </div>\n                        <div class='tooltip' v-if='tooltipToShow==\"precinct\" && index==hoveredIndex'>\n                            <div>Precinct:</div>\n                            <div>{{  Math.round(bargroup.actualValues.precinct*10)/10 }}</div>\n                            </div>\n                        \n                        <div class='bar-graph blue' \n                        @mouseover='showBarTooltip(\"county\",index)'\n                        @mouseleave='hidBarTooltip()'\n                        :style=\"{height:bargroup.values.county+'px',\n                        transform:heightTranslate()\n                        }\">\n                        </div>\n                        <div style='transform:translate(55%,35%)' class='tooltip' v-if='tooltipToShow==\"county\" && index==hoveredIndex'>\n                            <div>County:</div>\n                            <div>{{  Math.round(bargroup.actualValues.county*100)/100 }}</div>\n                            </div>\n                    \n                    </div>\n                    <div class='bar-description white-text small-text light'>\n                        {{bargroup.category}}\n                    </div>\n                </div>\n            </div>\n        </div>\n          \n\n      </div>  \n    </teleport>\n\n</template>\n<script>\n\nexport default {\n    data(){\n        return{\n            targetPrecinctData:undefined,\n            options:['on','off'],\n            selectedCounty:'Brooklyn',\n            geoJson:undefined,\n            loading:true,\n            dataGroup:[],\n            width:0,\n            lineGraphheight:0,\n            xAxisName:undefined,\n            yAxisName:undefined,\n            margin:{vertical:undefined,horizontal:undefined},\n            countyPrecinctCount:undefined,\n            lineColors:['#F78F67','#66C7FF'],\n            maxCosts:[],\n            numberOfstep:10,\n            comparisonData:[\n                {category:'Average Cost',values:{precinct:0,county:0},\n                actualValues:{precinct:0,county:0}\n                },\n                {category:'Number of Tickets',values:{precinct:0,county:0},\n                actualValues:{precinct:0,county:0}\n                },\n                {category:'Frequency per Plate',values:{precinct:0,county:0},\n                actualValues:{precinct:0,county:0}\n                },\n            ],\n            domainSize:0,\n            bargroupHovered:false,\n            tooltipToShow:undefined,\n            hoveredIndex:undefined\n        }\n    },\n    props:['selectedPrecinct'],\n    computed:{\n\n    monthlyData(){\n        var monthlyDataArr =[];\n        this.countyPrecinctCount;\n\n        for(let i=0;i<12;i++){\n\n        const targetCases=this.targetPrecinctData.filter(\n                (d)=>{\n                    var date = new Date(d['Issue Date']);\n                    var dateNum= date.getMonth();\n                    return dateNum==i\n                    }\n                ).length\n\n        const targetCountyCases = this.targetCountyData.filter(\n                (d)=>{\n                    var date = new Date(d['Issue Date']);\n                    var dateNum= date.getMonth();\n                    return dateNum==i\n                    }).length;\n        \n\n            monthlyDataArr.push(\n                {month:i,precinct:targetCases,county:targetCountyCases/this.countyPrecinctCount}\n            )\n        }\n        return monthlyDataArr\n    },\n\n      countyTicketFrequency(){\n      const plates = [...new Set(this.targetCountyData.map(d=>d['Plate']))].length;\n      const perPlate =this.countyTicketCountSum/plates;\n      return perPlate\n      },\n      precinctTicketFrequency(){\n        const uniquePlateCount= [...new Set(this.targetYearData.filter(d=>d['Precinct']==this.selectedPrecinct).map(d=>d['Plate']))].length\n        const perPlate = this.precinctTicket/uniquePlateCount;\n        return perPlate\n      },\n\n      targetYearData(){\n      return this.$store.getters['ByTicketData/targetYearData'];\n      },\n      yearSelected(){\n      return this.$store.getters.yearSelected;\n      },\n      county(){\n          return this.$store.getters.boroughSelected;\n      },\n      ticketArr(){\n\n        return this.targetYearData.filter(d=>d['Precinct']==this.selectedPrecinct).length\n      },\n      countyTicketCountSum(){\n\n        var initial = this.selectedCounty=='Manhattan'? 'MN':\n                      this.selectedCounty=='Queens'? 'QN':\n                      this.selectedCounty=='Bronx'? 'BX':\n                      this.selectedCounty=='Brooklyn'? 'BK':'unknown'\n\n        return  this.targetYearData.filter(d=>d['County']==initial).length\n      },\n      precinctTicket(){\n\n        return this.targetYearData.filter(d=>d['Precinct']==this.selectedPrecinct).length\n      },\n      precinctCostSum(){\n          return this.$store.getters['ByTicketData/precinctCost']\n      },\n      countyTicketAverage(){\n\n        var initial = this.selectedCounty=='Manhattan'? 'MN':\n                      this.selectedCounty=='Queens'? 'QN':\n                      this.selectedCounty=='Bronx'? 'BX':\n                      this.selectedCounty=='Brooklyn'? 'BK':'unknown'\n\n          const numberofPrecinctInCounty =[... new Set(this.targetYearData.filter(d=>d['County']==initial).map(d=>d['Precinct']))].length\n\n          const ticketSum = this.countyTicketCountSum;\n          const avg = Math.round(ticketSum*10/numberofPrecinctInCounty)/10;\n          return avg;\n      },\n      countyCostAverage(){\n          return this.$store.getters['ByTicketData/boroughAvgCost']\n      },\n      targetCountyData(){return this.$store.getters['ByTicketData/selectedBoroughData']},\n      maxCost(){ return Math.max(...this.maxCosts)},\n    },\n    async mounted(){\n\n        this.emitLoad()\n        this.geoJson=this.$store.getters['ByGeoData/precinctGeoJson'];\n        this.selectedCounty=this.county;\n        this.setSVGWidthHeight()\n\n        if(this.selectedPrecinct){\n        this.$store.dispatch('ByTicketData/setTargetPrecinct',this.selectedPrecinct)\n        }\n\n        this.changeLoad()\n        this.emitLoad()\n    },\n    watch:{\n        selectedCounty:function(val){\n            this.$store.dispatch('boroughChange',val)\n            // by_borough\n            if(this.$route.path.includes('by_borough')){\n                this.$router.push(`${val}`)\n            }\n        },\n        selectedPrecinct:function(val){\n            this.$store.dispatch('ByTicketData/setTargetPrecinct',val)\n            this.getMaxCost()\n\n        /*createPrecinctGraphDataSet & createCountyGraphDataset \n        fill up dataGroup. so it has to be renewed in \n        every selection*/\n\n            this.dataGroup=[];\n            this.createPrecinctGraphDataSet()\n            this.createCountyGraphDataSet()\n            this.barUpdate()\n        }\n    },\n    methods:{\n        showBarTooltip(target,index){\n            this.tooltipToShow=target\n            this.hoveredIndex=index\n        },\n        hidBarTooltip(){\n            this.tooltipToShow=undefined\n            this.hoveredIndex=undefined\n        },\n        heightTranslate(){\n            return `translateY(${this.domainSize}px) rotate(180deg)`\n        },\n\n        barUpdate(){\n            // Cost calculation\n            this.domainSize = this.$refs.barBox.clientHeight;\n\n            const fullScale1=Math.max(this.countyCostAverage,this.precinctCostSum);\n\n            this.comparisonData[0].values.precinct=(this.precinctCostSum/fullScale1)*this.domainSize\n            this.comparisonData[0].values.county=(this.countyCostAverage/fullScale1)*this.domainSize\n            this.comparisonData[0].actualValues.precinct=this.precinctCostSum\n            this.comparisonData[0].actualValues.county=this.countyCostAverage\n\n            // Ticket calculation\n            const fullScale2=Math.max(this.countyTicketAverage,this.precinctTicket);\n            this.comparisonData[1].values.precinct=(this.precinctTicket/fullScale2)*this.domainSize\n            this.comparisonData[1].values.county=(this.countyTicketAverage/fullScale2)*this.domainSize\n            this.comparisonData[1].actualValues.precinct=this.precinctTicket\n            this.comparisonData[1].actualValues.county=this.countyTicketAverage\n\n\n            // Frequency calcuation\n            const fullScale3 = Math.max(this.countyTicketFrequency,this.precinctTicketFrequency);\n            this.comparisonData[2].values.precinct=(this.precinctTicketFrequency/fullScale3)*this.domainSize\n            this.comparisonData[2].values.county=(this.countyTicketFrequency/fullScale3)*this.domainSize\n            this.comparisonData[2].actualValues.precinct=this.precinctTicketFrequency\n            this.comparisonData[2].actualValues.county=this.countyTicketFrequency\n\n        },\n        emitLoad(){\n            this.$emit('loadingStatus',this.loading)\n        },\n        changeLoad(){\n            this.loading=false\n        },\n        setSVGWidthHeight(){\n            this.width=this.$refs.lineGraphContainer.clientWidth;\n            this.lineGraphheight=this.$refs.lineGraphContainer.clientHeight;\n            this.margin.vertical=this.lineGraphheight*0.1;\n            this.margin.horizontal=this.width*0.05;\n\n\n        },\n        getMaxCost(){\n        this.maxCosts =[];\n        \n        const targetPrecinctArr=this.targetYearData.filter(d=>d['Precinct']==this.selectedPrecinct);\n        this.targetPrecinctData=targetPrecinctArr\n        var costByPlatePrecinct =[];\n        var platesPrecinct = [...new Set(targetPrecinctArr.map(d=>d['Plate']))];\n        platesPrecinct.forEach((d)=>{\n            var eachPlate = targetPrecinctArr.filter(t=>t['Plate']==d);\n            var eachPlateCostSum= eachPlate.reduce((a,b)=>{\n                return {\n                    plateNumber:d,\n                    costSum:a.costSum + b['Payment Amount']\n                    }\n            },{plateNumber:d,costSum:0});\n            costByPlatePrecinct.push(eachPlateCostSum)\n        });\n\n        var costsumsPrecinct = costByPlatePrecinct.map(d=>d.costSum);\n        var maxCostPrecinct = Math.max(...costsumsPrecinct)\n        this.maxCosts.push(maxCostPrecinct);\n\n        this.countyPrecinctCount = [...new Set(this.targetCountyData.map(d=>d['Precinct']))].length;\n        var costByPlateCounty=[];\n        var platesCounty = [... new Set(this.targetCountyData.map(d=>d['Plate']))];\n\n        platesCounty.forEach((d)=>{\n        \n                       var eachPlate = this.targetCountyData.filter(t=>t['Plate']==d);\n\n                       var eachPlateCostSum= eachPlate.reduce((a,b)=>{\n                           return {\n                               plateNumber:d,\n                               costSum:a.costSum + b['Payment Amount']\n                               }\n                       },{plateNumber:d,costSum:0});\n\n\n                       costByPlateCounty.push(eachPlateCostSum)\n\n\n                   });\n        \n        var costsumsCounty = costByPlateCounty.map(d=>d.costSum);\n        var maxCostCounty = Math.max(...costsumsCounty)\n        this.maxCosts.push(maxCostCounty);\n\n        },\n\n\n        createPrecinctGraphDataSet(){\n            const targetPrecinctArr=this.targetYearData.filter(d=>d['Precinct']==this.selectedPrecinct);\n\n            var costByPlatePrecinct =[];\n            var platesPrecinct = [...new Set(targetPrecinctArr.map(d=>d['Plate']))];\n            \n            platesPrecinct.forEach((d)=>{\n\n                var eachPlate = targetPrecinctArr.filter(t=>t['Plate']==d);\n\n                var eachPlateCostSum= eachPlate.reduce((a,b)=>{\n                    return {\n                        plateNumber:d,\n                        costSum:a.costSum + b['Payment Amount']\n                        }\n                },{plateNumber:d,costSum:0});\n\n                costByPlatePrecinct.push(eachPlateCostSum)\n\n            });\n\n            var finalArr =[];\n            var stepSize = this.maxCost/this.numberOfstep;\n\n            for(let i=0;i<this.numberOfstep;i++){\n                var count =0;\n                var paymentTop = stepSize*(i+1);\n                var paymentBottom =stepSize*(i);\n                costByPlatePrecinct.forEach((t)=>{\n                    if(i==0){\n                        if(t.costSum>=paymentBottom && t.costSum<=paymentTop){\n                            count++\n                        }else{null}\n                    }else{\n                        if(t.costSum>paymentBottom && t.costSum<=paymentTop){\n                            count++\n                        }else{null}\n                    }\n                })\n                finalArr.push({\n                    costWidth:paymentTop,\n                    cases:count\n                });\n            }\n            this.dataGroup.push(finalArr)\n\n        },\n        createCountyGraphDataSet(){\n\n            var costByPlateCounty=[];\n            var plates = this.targetCountyData.map(d=>d['Plate']);\n            var uniquePlates = [... new Set(plates)];\n\n            uniquePlates.forEach((d)=>{\n\n                var eachPlate = this.targetCountyData.filter(t=>t['Plate']==d);\n\n                var eachPlateCostSum= eachPlate.reduce((a,b)=>{\n                    return {\n                        plateNumber:d,\n                        costSum:a.costSum + b['Payment Amount']\n                        }\n                },{plateNumber:d,costSum:0});\n\n\n                costByPlateCounty.push(eachPlateCostSum)\n\n            });\n\n\n            var finalArr =[];\n            var stepSize = this.maxCost/this.numberOfstep;\n\n\n            for(let i=0;i<this.numberOfstep;i++){\n                var count =0;\n                var paymentTop = stepSize*(i+1);\n                var paymentBottom =stepSize*(i);\n                costByPlateCounty.forEach((t)=>{\n                    if(i==0){\n                        if(t.costSum>=paymentBottom && t.costSum<=paymentTop){\n                            count++\n                        }else{null}\n                    }else{\n                        if(t.costSum>paymentBottom && t.costSum<=paymentTop){\n                            count++\n                        }else{null}\n                    }\n                })\n                finalArr.push({\n                    costWidth:paymentTop,\n                    cases:count/this.countyPrecinctCount\n                });\n            }\n            this.dataGroup.push(finalArr)\n            this.xAxisName=Object.keys(finalArr[0])[0]\n            this.yAxisName=Object.keys(finalArr[0])[1]\n        }\n   \n\n    }\n}\n</script>\n<style scoped>\n.graph-headline{\n    display:flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n.selection-tab{\n    min-height:80px;\n    height:10%;\n    background:#393939c0;\n    border-radius:5px;\n}\n.borough-button{\n    position:absolute;\n    top:3rem;\n    left:1rem;\n}\n.title-line{\n    display:flex;\n    flex-direction: row;\n    justify-content:space-between;\n    position:absolute;\n    width:100%;\n    top:1rem;\n}\n.tab{\n    min-width:400px;\n    min-height:750px;\n    width:30vw;\n    height:85vh;\n    z-index:8;\n    position:absolute;\n    top:3rem;\n}\n.button{\n    display:flex;\n    gap:0 0.5rem;\n}\n.button input{\n    clip: rect(0, 0, 0, 0);\n    position:absolute !important;\n    height: 1px;\n    width: 1px;\n    overflow:hidden;\n}\n.button label{\n    opacity:0.8;\n    line-height:1;\n    text-align:center;\n    padding:0.5rem 0.5rem;\n    border:#7f7f7f93 solid 1px;\n    border-radius:4px;\n    cursor:pointer;\n}\n.button input:checked + label {\n    border: #66c7ff solid 1.5px;\n    color:#F1F5FB;\n    font-weight:600;\n    opacity:1;\n}\nhr{\n    border:0.5px #F1F5FB solid;\n    opacity:0.2;\n    display:block;\n    line-height:0.5;\n    margin:0.2rem 0 ;\n    padding:0;\n}\n.analysis-tab{\n    padding:1rem 1rem;\n    margin-top:0.3rem;\n    min-height:560px;\n    height:70%;\n    background:#393939c0;\n    border-radius:5px;\n}\n.borough-info-title{\n    display:flex;\n    justify-content:space-between;\n}\n.precinct-summary{\n    display:flex;\n    flex-direction: row;\n}\n.sub-section{\n    display:flex;\n    flex-direction:column;\n    width:100%;\n}\n.cost-dist{\n    display:flex;\n    flex-direction:row;\n    width:100%;\n    height:25%;\n    min-height:155px;\n    margin-top:.5rem;\n    /* border:solid red 1px; */\n}\n.vsComparison{\n    margin-top:.5rem;\n    padding:0;\n    width:100%;\n    height:20%;\n    min-height:85px;\n    display:flex;\n    flex-direction:row;\n}\n\n.bar-graph-container{\n\n    height:100%;\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-evenly;\n    gap:0.5rem;\n}\n.bar-box{\n\n    height:70%;\n    display:flex;\n    flex-direction:row;\n    gap:1rem;\n}\n\n.bar-graph{\n    transform-origin:top;\n    transition:height 2s;\n    width:15px;\n    z-index:3;\n}\n.bar-graph:hover{\n    border:solid 1px #f1f5fb83;\n}\n.tooltip{\n    padding:0.3rem;\n    position:absolute;\n    transform:translate(25%,35%);\n    background-color:#F1F5FB;\n    display:block;\n    width:5rem;\n    height:3rem;\n    border-radius:2px;\n    box-shadow:1px 1px 3px #1a1a1a63;\n    z-index:5\n}\n\n</style>\n"],"sourceRoot":""}]}