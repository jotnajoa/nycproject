{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughSelection.vue?vue&type=template&id=89f77acc&scoped=true","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughSelection.vue","mtime":1624253774593},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBUcmFuc2l0aW9uIGFzIF9UcmFuc2l0aW9uLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTg5Zjc3YWNjIik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi04OWY3N2FjYyIpOwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpbWciLCB7CiAgc3JjOiAiL2ltZ3MvYmFja2dyb3VuZE1hcC5wbmciLAogIGNsYXNzOiAiYmFja2dyb3VuZGltZyIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiaG9yaXpvbnRhbC1jb250YWluZXIgZGFyay1iYWNrZ3JvdW5kIHdoaXRlLXRleHQiLAogIHJlZjogImNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgaWQ6ICJteUNhbnZhcyIsCiAgcmVmOiAibXlDYW52YXMiCn07Cgp2YXIgX2hvaXN0ZWRfNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIHsKICBjbGFzczogIm1lbnUtdGV4dCB3aGl0ZS10ZXh0IGJvbGQgYmlnLXRleHQiCn0sICJTZWxlY3QgeWVhciB0byBleHBsb3JlIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzUgPSB7CiAgaWQ6ICJsYWJlbHMiLAogIHJlZjogImxhYmVsQ29udGFpbmVyIgp9OwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJzd2l0Y2gtbGFiZWwgYmlnLXRleHQgYm9sZCIKfSwgIiBTZWxlY3QgZmlsdGVyIG9wdGlvbiAiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNyA9IHsKICBjbGFzczogInN1bW1hcnkiCn07CnZhciBfaG9pc3RlZF84ID0gewogIGNsYXNzOiAibGVmdHBhcnQiCn07CnZhciBfaG9pc3RlZF85ID0gewogIGNsYXNzOiAiYmlnLXRleHQgYm9sZCBsZWZ0LXRpdGxlIHN1YnBhcnQiCn07Cgp2YXIgX2hvaXN0ZWRfMTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCBudWxsLCAiVG90YWwgUGFya2luZyBWaW9sYXRpb24iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTEgPSB7CiAgY2xhc3M6ICJzdXBlci1iaWctdGV4dCIKfTsKCnZhciBfaG9pc3RlZF8xMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJvcmFuZ2UtdGV4dCBsaWdodCBtZWRpdW0tdGV4dCIKfSwgInRpY2tldHMiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTMgPSB7CiAgY2xhc3M6ICJiaWctdGV4dCBib2xkIHJpZ2h0cGFydCBzdWJwYXJ0Igp9OwoKdmFyIF9ob2lzdGVkXzE0ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgbnVsbCwgIkNvc3QgcGFpZCIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xNSA9IHsKICBjbGFzczogImJpZy10ZXh0IGJvbGQiCn07Cgp2YXIgX2hvaXN0ZWRfMTYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIHsKICBzdHlsZTogewogICAgImRpc3BsYXkiOiAiYmxvY2siLAogICAgImxpbmUtaGVpZ2h0IjogIjFyZW0iLAogICAgImNvbnRlbnQiOiAiXCIgXCIiLAogICAgIm1hcmdpbiI6ICIwLjVyZW0gMCIKICB9Cn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIG51bGwsICJOdW1iZXIgb2YgUGxhdGUiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTggPSB7CiAgY2xhc3M6ICJiaWctdGV4dCBib2xkIgp9OwoKdmFyIF9ob2lzdGVkXzE5ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3BhbiIsIHsKICBjbGFzczogIm9yYW5nZS10ZXh0IGxpZ2h0IG1lZGl1bS10ZXh0Igp9LCAicGxhdGVzIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X3llYXJfc2VsZWN0ID0gX3Jlc29sdmVDb21wb25lbnQoInllYXItc2VsZWN0Iik7CgogIHZhciBfY29tcG9uZW50X3N3aXRjaF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoInN3aXRjaC1mb3JtIik7CgogIHZhciBfY29tcG9uZW50X2xvYWRpbmdfc3Bpbm5lciA9IF9yZXNvbHZlQ29tcG9uZW50KCJsb2FkaW5nLXNwaW5uZXIiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19ob2lzdGVkXzEsIF9jcmVhdGVWTm9kZShfVHJhbnNpdGlvbiwgewogICAgbmFtZTogIm9wZW51cCIsCiAgICBvbkFmdGVyRW50ZXI6ICRvcHRpb25zLnRyYW5zaXRpb25FbmQKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aElkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFskZGF0YS5zaG93dXAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImNhbnZhcyIsIF9ob2lzdGVkXzMsIG51bGwsIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICksIF9ob2lzdGVkXzQsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3llYXJfc2VsZWN0LCB7CiAgICAgICAgY2xhc3M6ICJ5ZWFyLXNlbGVjdGlvbiIKICAgICAgfSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgbnVsbCwgNTEyCiAgICAgIC8qIE5FRURfUEFUQ0ggKi8KICAgICAgKSwgX2hvaXN0ZWRfNiwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfc3dpdGNoX2Zvcm0sIHsKICAgICAgICBjbGFzczogInN3aXRjaC1mb3JtIiwKICAgICAgICBvcHRpb25zOiAkZGF0YS5vcHRpb25zLAogICAgICAgIHNtYWxsU2VsZWN0aW9uOiBmYWxzZSwKICAgICAgICBvblNlbGVjdGVkQ2F0ZWdvcnk6ICRvcHRpb25zLmNoYW5nZUNhdGVnb3J5LAogICAgICAgIG9uQ2xpY2s6ICRvcHRpb25zLmRyYXdTcGhlcmVzCiAgICAgIH0sIG51bGwsIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbIm9wdGlvbnMiLCAib25TZWxlY3RlZENhdGVnb3J5IiwgIm9uQ2xpY2siXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNywgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOSwgW19ob2lzdGVkXzEwLCBfY3JlYXRlVk5vZGUoImRpdiIsIG51bGwsICJDb3VudCBvZiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5jdXJyZW50WWVhciksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzExLCBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLnN1bW1hcnlTdW0pICsgIiAiLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKSwgX2hvaXN0ZWRfMTJdKV0pXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTMsIFtfaG9pc3RlZF8xNCwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xNSwgIiQiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5jb3N0U3VtKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICksIF9ob2lzdGVkXzE2LCBfaG9pc3RlZF8xNywgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xOCwgW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5wbGF0ZVN1bSkgKyAiICIsIDEKICAgICAgLyogVEVYVCAqLwogICAgICApLCBfaG9pc3RlZF8xOV0pXSldKV0sIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJvbkFmdGVyRW50ZXIiXSksICRvcHRpb25zLmlzTG9hZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2xvYWRpbmdfc3Bpbm5lciwgewogICAga2V5OiAwCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhJZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLmlzTG9hZGluZyksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfSk7"},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughSelection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<img src='/imgs/backgroundMap.png' class=\"backgroundimg\">\n    <transition name=\"openup\" v-on:after-enter=\"transitionEnd\">\n    \n    <div class='horizontal-container dark-background white-text' v-if='showup' ref='container'>\n        <canvas id='myCanvas' ref='myCanvas'></canvas>\n        <div class='menu-text white-text bold big-text'>Select year to explore</div>\n        <year-select class='year-selection'></year-select>\n        <div id=\"labels\" ref='labelContainer'></div>\n        <div class=\"switch-label big-text bold\">\n            Select filter option\n        </div>\n        <switch-form class='switch-form'\n        :options='options'\n        :smallSelection=false\n        @selectedCategory='changeCategory'\n        @click='drawSpheres'\n        ></switch-form>\n        <div class=\"summary\">\n            <div class='leftpart'>\n                <div class=\"big-text bold left-title subpart\">\n                    <div>Total Parking Violation</div>\n                    <div >Count of {{currentYear}} </div>\n                    <div class='super-big-text'>{{summarySum}}  <span class='orange-text light medium-text'>tickets</span> </div>\n                </div>\n            </div>\n            <div class='big-text bold rightpart subpart'>\n                <div>Cost paid</div>\n                <div class='big-text bold'>${{costSum}}</div>\n                <br style='display:block;line-height:1rem;content:\" \";margin:0.5rem 0 '>\n                <div>Number of Plate</div>\n                <div class='big-text bold'>{{plateSum}} <span class='orange-text light medium-text'>plates</span></div>\n            </div>\n        </div>\n    </div>\n        \n    </transition>\n    <loading-spinner v-if='isLoading'>\n{{isLoading}}\n    </loading-spinner>\n</template>\n\n<script>\n\nlet scene, camera, renderer,raycaster,canvas,light;\nlet frameCount=0;\nimport gsap from \"gsap\";\nimport * as THREE from 'three'\nimport YearSelect from '../components/UI/YearSelect.vue'\n\nlet sphereGroup=new THREE.Group();\nlet pointGroup =new THREE.Group();\nexport default {\n  components: { YearSelect },\n  data(){\n      return{\n          showup:false,\n          sRadius:2,\n          targetCounty:undefined,\n          mouse:{x:undefined,y:undefined},\n          getIntersect:false,\n          maxRadius:1,\n          spacing:2.2,\n          currentSetup:'cost',\n          width:undefined,\n          height:undefined,\n          options:['cost','tickets']\n      }\n  },\n  watch:{\n      boroughData(){\n          if(sphereGroup.children.length>2 && document.querySelectorAll('.countTag')[2]){\n        this.drawSpheres(); \n        this.updateText()\n          }\n      }\n  },\n  mounted(){\n    this.showup=true;\n    this.$store.dispatch('Landing/loadData',2021)\n\n    const unwatch = this.$watch(\n        \n        () => this.$store.getters['Landing/boroSummary'],\n        boroSummary =>{\n            if(boroSummary){\n                this.boroughData=boroSummary;\n                this.init();\n                this.animate();\n                unwatch()\n            }\n        }\n    )\n\n    window.addEventListener('mousemove',(e)=>{\n        this.mouseTrack(e)\n    })\n    window.addEventListener('resize', () => {\n    this.updateViewSize()\n    \n    setTimeout(()=>{\n        if(sphereGroup.children.length!=0){\n            sphereGroup.children.forEach((d)=>{this.moveText(d)})\n            }\n    },500)\n    })\n    window.addEventListener('click',()=>{\n        if(this.getIntersect){\n            const countyName=raycaster.intersectObjects(sphereGroup.children)[0].object.userData.countyName\n            this.$store.dispatch('boroughChange',countyName);\n            this.$router.push(`/by_borough/${countyName}`)\n        }\n    })\n\n  },\n  methods:{  \n      startLoading(){\nthis.$store.dispatch('loadingChange',true)\n      },\n      endLoading(){\n    this.$store.dispatch('loadingChange',false)\n    },\n      changeCategory(e){\n          this.currentSetup=e;\n\n          if(this.currentSetup=='tickets'){\n              const hideGroup=document.querySelectorAll('.costTag');\n              hideGroup.forEach((d)=>{\n                  d.style.visibility='hidden'\n              });\n              const visibleGroup=document.querySelectorAll('.countTag');\n              visibleGroup.forEach((d)=>{\n                  d.style.visibility='visible'\n              })\n          }else if(this.currentSetup=='cost'){\n            const hideGroup=document.querySelectorAll('.costTag');\n              hideGroup.forEach((d)=>{\n                  d.style.visibility='visible'\n              });\n              const visibleGroup=document.querySelectorAll('.countTag');\n              visibleGroup.forEach((d)=>{\n                  d.style.visibility='hidden'\n              })\n          }\n\n      },\n transitionEnd(){\n    this.updateViewSize()\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const ambLight = new THREE.AmbientLight(color,3)\n    light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(0, 30, 20);\n\n\n    scene.add( light );\n    scene.add( ambLight );\n},\nupdateText(){\n    // cost & count\n    // countTag전부 선택 costTag전부선택\nthis.boroughData.forEach((d,i)=>{\n    document.querySelectorAll('.costTag')[i].textContent='$'+d.cost.toLocaleString();\n    document.querySelectorAll('.countTag')[i].textContent=d.count.toLocaleString();\n})\n\n},\ninit(){\n\nscene =new THREE.Scene();\ncanvas=this.$refs.myCanvas\nraycaster=new THREE.Raycaster();\nraycaster\nthis.mouse = new THREE.Vector2();\nthis.updateViewSize()\nthis.drawSpheres()\nsetTimeout(()=>{\n    sphereGroup.children.forEach((d)=>{\n\n        this.drawTexts(d.userData.countyName,d)\n})\n    },1500)\n\n\n},\n\nanimate(){\n    frameCount+=0.005\n    requestAnimationFrame(this.animate);\n\n    raycaster.setFromCamera(this.mouse,camera);\n    const intersetcs=raycaster.intersectObjects(sphereGroup.children) \n    if(intersetcs.length>0){\n        \n        this.explodeSphere(intersetcs[0].object)\n        this.animatePoints(pointGroup.children[0])\n        this.getIntersect=true\n        \n    }else if(intersetcs.length==0 && pointGroup.children.length==1){\n        this.getIntersect=false;\n        this.startLoading();\n        const pointObj = pointGroup.children[0];\n        pointGroup.remove(pointObj)\n        this.sphereBack();\n    }\n\n\n    scene.background = new THREE.Color(0x333238)\n    renderer.render(scene, camera);\n},\n\ndrawSpheres(){\n    let currentSetup = this.currentSetup;\n\n    if(scene&&sphereGroup){\n        for (var i = sphereGroup.children.length - 1; i >= 0; i--) {\n            sphereGroup.remove(sphereGroup.children[i]);\n        }\n    }\n    this.boroughData.forEach((d)=>{\n    const radius= (currentSetup=='cost')? (d.cost/this.biggestCost)*this.maxRadius : (d.count/this.biggestCount)*this.maxRadius\n    const segmentCount = Math.ceil(Math.pow(d.count,1/2))\n    const sphereGeometry = new THREE.SphereGeometry(radius,segmentCount,segmentCount);\n    const material = new THREE.MeshStandardMaterial({\n        color:d.color,\n        roughness:0.8,\n        metalness:0.9,\n        // specular:`${d.color.substring(0,5)}FF`,\n        transparent:true,\n        opacity:1\n    })\n\n\n    \n\n    const position = (-1.5*this.spacing)+d.index*this.spacing*1.1\n    const sphereMesh = new THREE.Mesh(sphereGeometry,material);\n    sphereMesh.position.x=position;\n    sphereMesh.position.y=-this.maxRadius/3\n    sphereMesh.userData.count = d.count;\n    sphereMesh.userData.cost = d.cost;\n    sphereMesh.userData.color = d.color;\n\n    const countyName = d.county=='BK'? 'Brooklyn':\n                   d.county=='MN'? 'Manhattan':\n                   d.county=='QN'? 'Queens':\n                   d.county=='BX'? 'Bronx':'unknown'\n\n\n    sphereMesh.userData.countyName = countyName\n   \n    sphereGroup.add(sphereMesh)\n    })\n    scene.add(sphereGroup)\n\n},\ndrawTexts(contents,targetMesh){\n\nconst countyName = contents;\n\nconst labelContainer = this.$refs.labelContainer;\n\n\n    const elem = document.createElement('div');\n    elem.textContent=countyName;\n    elem.classList.add('countyTag')\n    labelContainer.appendChild(elem)\n\n    const count = document.createElement('div');\n    count.textContent=targetMesh.userData.count.toLocaleString();\n    count.classList.add('countTag');\n    labelContainer.appendChild(count)\n\n    const cost = document.createElement('div');\n    cost.textContent='$'+targetMesh.userData.cost.toLocaleString()\n    cost.classList.add('costTag');\n    labelContainer.appendChild(cost)\n\n    const button = document.createElement('div');\n    button.textContent=`Click to explore ${countyName}`\n    button.classList.add('exploreTag');\n    labelContainer.appendChild(button)\n    button.addEventListener('click',()=>{\n        this.moveToMap(countyName)\n    })\n\n    const tempV = new THREE.Vector3();\n\n    targetMesh.updateWorldMatrix(true, false);\n    targetMesh.getWorldPosition(tempV)\n\n\n    tempV.project(camera);\n\n    const x = (tempV.x * .5 + .5) * canvas.clientWidth;\n    const y = (tempV.y * -.5 + .5) * canvas.clientHeight;\n\n    elem.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px)`;\n    count.style.transform = `translate(-50%, -50%) translate(${x}px,${y-count.clientHeight/2}px)`;\n    cost.style.transform = `translate(-50%, -50%) translate(${x}px,${y-cost.clientHeight/2}px)`;\n    button.style.transform = `translate(-50%, -50%) translate(${x}px,${this.height*0.9}px)`;\n    button.style.width='13rem'\n\n    targetMesh.userData.x=x;\n    targetMesh.userData.y=y;\n\n\n},\ntargetHighlight(target){\n    \n    sphereGroup.children.forEach((d)=>{\n        d.material.opacity=0.2\n        target.material.opacity=0\n    })\n    const targetIndex=sphereGroup.children.indexOf(target)\n\n\n    const costs = document.querySelectorAll('.costTag');\n    costs.forEach((d)=>{\n        gsap.to(d,{opacity:0,duration:0.5})\n    })\n    const counts = document.querySelectorAll('.countTag');\n    counts.forEach((d)=>{\n        gsap.to(d,{opacity:0,duration:0.5})\n    })\n    const county = document.querySelectorAll('.countyTag');\n    county.forEach((d)=>{\n        gsap.to(d,{opacity:0,duration:0.5})\n    })\n\n    const exploreTag = document.querySelectorAll('.exploreTag');\n    exploreTag.forEach((d,i)=>{\n        if(i!=targetIndex){\n        gsap.to(d,{opacity:0.1,duration:0.5})\n        }\n    })\n\n},\nunHighlight(){\n    const costs = document.querySelectorAll('.costTag');\n    costs.forEach((d)=>{\n        gsap.to(d,{opacity:1,duration:0.5})\n    })\n    const counts = document.querySelectorAll('.countTag');\n    counts.forEach((d)=>{\n        gsap.to(d,{opacity:1,duration:0.5})\n    })\n    const county = document.querySelectorAll('.countyTag');\n    county.forEach((d)=>{\n        gsap.to(d,{opacity:1,duration:0.5})\n    })\n\n    const exploreTag = document.querySelectorAll('.exploreTag');\n    exploreTag.forEach((d)=>{\n\n        gsap.to(d,{opacity:1,duration:0.5})\n\n    })\n\n\n},\nupdateViewSize(){\n    this.width=this.$refs.container.clientWidth;\n    this.height=this.$refs.container.clientHeight;\n\n    canvas.style.height=`${this.height}px`\n    canvas.style.width=`${this.width}px`;\n\nvar horizontalFov = 45;\n\n\n    camera = new THREE.PerspectiveCamera( 45, this.width/this.height, 0.1, 100 );\ncamera.fov = (Math.atan(Math.tan(((horizontalFov / 2) * Math.PI) / 180) / camera.aspect) * 2 * 180) / Math.PI;\n\n\n    renderer=new THREE.WebGLRenderer({\n        canvas:canvas,\n        alpha:true,\n        transparent:true\n        })\n    renderer.setSize( this.width, this.height );\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n    camera.position.set( 0, 0, 5 );\n},\nmoveText(targetMesh){\n    const countyName = targetMesh.userData.countyName\n    const tempV = new THREE.Vector3();\n    targetMesh.updateWorldMatrix(true, false);\n    targetMesh.getWorldPosition(tempV);\n    tempV.project(camera);\n    const x = (tempV.x * .5 + .5) * canvas.clientWidth;\n    const y = (tempV.y * -.5 + .5) * canvas.clientHeight;\n    targetMesh.userData.x=x;\n    targetMesh.userData.y=y;\n\n    const countyTags = document.querySelectorAll('.countyTag');\n    const countTags = document.querySelectorAll('.countTag');\n    const costTags = document.querySelectorAll('.costTag');\n    const exploreTags = document.querySelectorAll('.exploreTag');\n    var targetIndex=0;\n    countyTags.forEach((d,i)=>{\n        if(d.textContent==countyName){\n            targetIndex=i;\n            d.style.transform=`translate(-50%, -50%) translate(${x}px,${y}px)`;\n        }\n    });\n\n    countTags[targetIndex].style.transform = `translate(-50%, -50%) translate(${x}px,${y-countTags[targetIndex].clientHeight/2}px)`;\n    costTags[targetIndex].style.transform = `translate(-50%, -50%) translate(${x}px,${y-costTags[targetIndex].clientHeight/2}px)`;\n    exploreTags[targetIndex].style.transform = `translate(-50%, -50%) translate(${x}px,${this.height*0.9}px)`;\n},\nmouseTrack(e){\nthis.mouse.x=(e.offsetX/this.width)*2-1;\nthis.mouse.y=-(e.offsetY/this.height)*2+1\n// this.getIntersect=true;\n},\nexplodeSphere(targetMesh){\n\ngsap.to(targetMesh.material, {opacity: 0.1, duration: 1,\nonComplete: this.drawSubDots, onCompleteParams: [targetMesh]\n});\n\n},\nsphereBack(){\n\nsphereGroup.children.forEach((d)=>{\ngsap.to(d.material, {opacity: 1, duration: 1,\nonComplete:this.endLoading\n});\n\nthis.unHighlight()\n})\n},\ndrawSubDots(targetMesh){\n\nthis.targetHighlight(targetMesh)\n\nif(pointGroup.children.length==0){\n\nconst randomNumWithin = (rngNum)=>{\n    return (Math.random()-0.5)*2*rngNum\n}\n\nconst x = targetMesh.position.x\nconst y = targetMesh.position.y\nconst radius= (this.currentSetup=='cost')? (targetMesh.userData.cost/this.biggestCost)*this.maxRadius : (targetMesh.userData.count/this.biggestCount)*this.maxRadius\nconst segmentCount = Math.ceil(Math.pow(targetMesh.userData.count,1/2))\nconst explodeExpansion=1.05\nconst explodeGeometry = new THREE.SphereGeometry(radius*explodeExpansion,segmentCount,segmentCount);\nvar pointMaterial;\nif(segmentCount>300){\npointMaterial = new THREE.PointsMaterial( { color: targetMesh.userData.color,size:0.005,transparent:true,opacity:0.1,depthWrite: false,depthTest: false } );\n}else{\n    pointMaterial = new THREE.PointsMaterial( { color: targetMesh.userData.color,size:0.05,transparent:true,opacity:0.3,depthWrite: false,depthTest: false } );\n}\n//  \nconst pointsMesh = new THREE.Points( explodeGeometry, pointMaterial );\n\nconst {array}=pointsMesh.geometry.attributes.position;\nconst {count}=pointsMesh.geometry.attributes.position;\nfor(let i=0;i<count;i++){\n    let i3 = i*3;\n    array[i3]=randomNumWithin(radius)\n    array[i3+1]=randomNumWithin(radius)\n}\npointsMesh.position.x=x;\npointsMesh.position.y=y;\n\npointGroup.add(pointsMesh)\n// targetMesh.position.z=-2*radius;\nscene.add(pointGroup)\n\n}\n},\nanimatePoints(pointsMesh){\nif(pointsMesh){\nconst {array}=pointsMesh.geometry.attributes.position;\nconst {count}=pointsMesh.geometry.attributes.position;\nfor(let i=0;i<count;i++){\n    let i3 = i*3;\n    array[i3]+=Math.sin(frameCount*Math.random()+i)*0.001\n    array[i3+1]+=Math.cos(frameCount*Math.random()+i)*0.001\n    // array[i3+2]=randomNumWithin(radius)\n}\npointsMesh.geometry.attributes.position.needsUpdate = true;\n}\n},\nmoveToMap(county){\n    this.$store.dispatch('boroughChange',county)\n    this.$router.push(`/by_borough/${county}`)\n}\n},\n    computed:{\n        boroughData(){\n            return this.$store.getters['Landing/boroSummary']\n        },\n        biggestCost(){\n            let costarr = this.boroughData.map(d=>d.cost)\n            let biggestValue = Math.max(...costarr);\n            return biggestValue\n        },\n        biggestCount(){\n            let countarr = this.boroughData.map(d=>d.count)\n            let biggestValue = Math.max(...countarr);\n            return biggestValue\n        },\n        isLoading(){\n            return this.$store.getters.isLoading\n        },\n        currentYear(){\n            return this.$store.getters['Landing/year']\n        },\n        summarySum(){\n                if(this.boroughData.length>1){\n                var countarr=this.boroughData.map(d=>d.count);\n                var sumarr = countarr.reduce((a,b)=>a+b,0);\n                return sumarr.toLocaleString()\n                }else{\n                    return undefined\n                }\n        },\n        costSum(){\n            if(this.boroughData.length>1){\n            var costArr=this.boroughData.map(d=>d.cost);\n            var sumarr = costArr.reduce((a,b)=>a+b,0);\n            return sumarr.toLocaleString()\n            }else{return undefined}\n        },\n        plateSum(){\n            if(this.boroughData.length>1){\n                const plateArr = this.boroughData.map(d=>d.plateCount);\n                const sumArr = plateArr.reduce((a,b)=>a+b,0);\n                return sumArr.toLocaleString();\n            } else {return undefined}\n        }\n    }\n  \n}\n</script>\n<style scoped>\n.horizontal-container{\n    position:absolute;\n    top:50%;\n    transform:translate(0,-50%);\n    height:70vh;\n    width:100vw;\n    padding:0;\n    margin:0;\n    left:0;\n}\n.openup-enter-active,\n.openup-leave-active {\n  transition: all 0.5s ease;\n}\n\n.openup-enter-from,\n.openup-leave-to {\n    opacity:0;\n    height:0vh;\n    }\n\n#myCanvas{\n    border:solid 1px white;\n    width:100%;\n    height:100%;\n}\n.year-selection{\n    position:absolute;\n    top:3rem;\n    left:2rem;\n}\n.menu-text{\n    position:absolute;\n    left:2rem;\n    top:1rem;\n}\n.switch-label{\n    position:absolute;\n    top:6rem;\n    left:2rem;\n}\n.switch-form{\n    position:absolute;\n    top:8rem;\n    left:2rem;\n}\n::v-deep #labels{\n  position: absolute; \n  left: 0;            \n  top: 0;\n}\n\n::v-deep #labels > div {\n  position: absolute;  \n  left: 0;          \n  cursor: pointer;     \n}\n::v-deep .countTag , ::v-deep .costTag{\nfont-size:1.5rem;\npointer-events: none;\n\n}\n::v-deep .countTag{\n visibility:hidden;\n}\n::v-deep .countyTag{\n    margin-top:0.5rem;\n    font-size:1rem;\n    opacity:0.7;\n    pointer-events: none;\n}\n\n::v-deep .exploreTag{\nborder-bottom:solid 1px #F78F67;\ntext-align:center;\n}\n.summary{\n    position:absolute;\n    display:flex;\n    flex-direction:row;\n    align-content:flex-end;\n    top:1rem;\n    right:0rem;\n    width:45%;\n    gap:3rem;\n    height:30%;\n}\n.leftpart,.rightpart{\n    display:flex;\n    flex-direction:column;\n}\n.leftpart{\n    width:25vw;\n}\n.rightpart{\n    width:15vw;\n}\n</style>"],"sourceRoot":""}]}