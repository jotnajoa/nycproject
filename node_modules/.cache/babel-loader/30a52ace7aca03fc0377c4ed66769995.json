{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js??ref--13-0!/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByGeoData/index.js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByGeoData/index.js","mtime":1624426153168},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9zb29ua3BhaWsvRGVza3RvcC9OWUMgUHJvamVjdC9jb2RlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBwcmVjaW5jdEdlb0pzb246IHVuZGVmaW5lZCwKICAgICAgcHJlY2luY3RDb250b3VySnNvbjogdW5kZWZpbmVkCiAgICB9OwogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBnZW5lcmF0ZUdlb0pzb246IGZ1bmN0aW9uIGdlbmVyYXRlR2VvSnNvbihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5wcmVjaW5jdEdlb0pzb24gPSBwYXlsb2FkOwogICAgfSwKICAgIGdlbmVyYXRlQ29udG91ckdlb0pzb246IGZ1bmN0aW9uIGdlbmVyYXRlQ29udG91ckdlb0pzb24oc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUucHJlY2luY3RDb250b3VySnNvbiA9IHBheWxvYWQ7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBsZW5ndGhPZkNvdW50b3VyOiBmdW5jdGlvbiBsZW5ndGhPZkNvdW50b3VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcmVjaW5jdENvbnRvdXJHZW9Kc29uLmZlYXR1cmVzWzBdLmdlb21ldHJ5LmNvb3JkaW5hdGUubGVuZ3RoOwogICAgfSwKICAgIHByZWNpbmN0R2VvSnNvbjogZnVuY3Rpb24gcHJlY2luY3RHZW9Kc29uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcmVjaW5jdEdlb0pzb247CiAgICB9LAogICAgcHJlY2luY3RDb250b3VySnNvbjogZnVuY3Rpb24gcHJlY2luY3RDb250b3VySnNvbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJlY2luY3RDb250b3VySnNvbjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdlbmVyYXRlR2VvSnNvbjogZnVuY3Rpb24gZ2VuZXJhdGVHZW9Kc29uKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBkMy5qc29uKCJwcmVjaW5jdEdlb2RhdGEuZ2VvanNvbiIpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEuZmVhdHVyZXMuZm9yRWFjaChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgICBkLmNsaWNrZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2dlbmVyYXRlR2VvSnNvbicsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2VuZXJhdGVDb250b3VyR2VvSnNvbjogZnVuY3Rpb24gZ2VuZXJhdGVDb250b3VyR2VvSnNvbihjb250ZXh0KSB7CiAgICAgIHZhciBvdXRsaW5lanNvbiA9IHsKICAgICAgICAndHlwZSc6ICdGZWF0dXJlQ29sbGVjdGlvbicsCiAgICAgICAgJ2ZlYXR1cmVzJzogW3sKICAgICAgICAgICd0eXBlJzogJ0ZlYXR1cmUnLAogICAgICAgICAgJ2dlb21ldHJ5JzogewogICAgICAgICAgICAndHlwZSc6ICdMaW5lU3RyaW5nJywKICAgICAgICAgICAgJ2Nvb3JkaW5hdGVzJzogW10KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICBjb250ZXh0LmdlbmVyYXRlQ29udG91ckdlb0pzb24ob3V0bGluZWpzb24pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByGeoData/index.js"],"names":["d3","namespaced","state","precinctGeoJson","undefined","precinctContourJson","mutations","generateGeoJson","payload","generateContourGeoJson","getters","lengthOfCountour","precinctContourGeoJson","features","geometry","coordinate","length","actions","context","json","data","forEach","d","clicked","commit","outlinejson"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAFW,mBAEH;AACJ,WAAO;AACHC,MAAAA,eAAe,EAAEC,SADd;AAEHC,MAAAA,mBAAmB,EAAED;AAFlB,KAAP;AAIH,GAPU;AAQXE,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACSL,KADT,EACgBM,OADhB,EACyB;AAC5BN,MAAAA,KAAK,CAACC,eAAN,GAAwBK,OAAxB;AACH,KAHM;AAIPC,IAAAA,sBAJO,kCAIgBP,KAJhB,EAIuBM,OAJvB,EAIgC;AACnCN,MAAAA,KAAK,CAACG,mBAAN,GAA4BG,OAA5B;AACH;AANM,GARA;AAgBXE,EAAAA,OAAO,EAAE;AACLC,IAAAA,gBADK,4BACYT,KADZ,EACmB;AACpB,aAAOA,KAAK,CAACU,sBAAN,CAA6BC,QAA7B,CAAsC,CAAtC,EAAyCC,QAAzC,CAAkDC,UAAlD,CAA6DC,MAApE;AACH,KAHI;AAILb,IAAAA,eAJK,2BAIWD,KAJX,EAIkB;AACnB,aAAOA,KAAK,CAACC,eAAb;AACH,KANI;AAOLE,IAAAA,mBAPK,+BAOeH,KAPf,EAOsB;AACvB,aAAOA,KAAK,CAACG,mBAAb;AACH;AATI,GAhBE;AA2BXY,EAAAA,OAAO,EAAE;AACCV,IAAAA,eADD,2BACiBW,OADjB,EAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACRlB,EAAE,CAACmB,IAAH,2BADQ;;AAAA;AACrBC,gBAAAA,IADqB;AAE3BA,gBAAAA,IAAI,CAACP,QAAL,CAAcQ,OAAd,CAAsB,UAACC,CAAD,EAAO;AACzBA,kBAAAA,CAAC,CAACC,OAAF,GAAY,KAAZ;AACH,iBAFD;AAGAL,gBAAAA,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAkCJ,IAAlC;;AAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM9B,KAPI;AAQLX,IAAAA,sBARK,kCAQkBS,OARlB,EAQ2B;AAC5B,UAAIO,WAAW,GAAG;AACd,gBAAQ,mBADM;AAEd,oBAAY,CAAC;AACT,kBAAQ,SADC;AAET,sBAAY;AACR,oBAAQ,YADA;AAER,2BAAe;AAFP;AAFH,SAAD;AAFE,OAAlB;AAUAP,MAAAA,OAAO,CAACT,sBAAR,CAA+BgB,WAA/B;AACH;AApBI;AA3BE,CAAf","sourcesContent":["import * as d3 from 'd3';\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            precinctGeoJson: undefined,\n            precinctContourJson: undefined,\n        }\n    },\n    mutations: {\n        generateGeoJson(state, payload) {\n            state.precinctGeoJson = payload\n        },\n        generateContourGeoJson(state, payload) {\n            state.precinctContourJson = payload\n        }\n    },\n    getters: {\n        lengthOfCountour(state) {\n            return state.precinctContourGeoJson.features[0].geometry.coordinate.length\n        },\n        precinctGeoJson(state) {\n            return state.precinctGeoJson\n        },\n        precinctContourJson(state) {\n            return state.precinctContourJson\n        }\n    },\n    actions: {\n        async generateGeoJson(context) {\n            const data = await d3.json(`precinctGeodata.geojson`);\n            data.features.forEach((d) => {\n                d.clicked = false;\n            })\n            context.commit('generateGeoJson', data)\n        },\n        generateContourGeoJson(context) {\n            var outlinejson = {\n                'type': 'FeatureCollection',\n                'features': [{\n                    'type': 'Feature',\n                    'geometry': {\n                        'type': 'LineString',\n                        'coordinates': []\n                    }\n                }]\n            };\n            context.generateContourGeoJson(outlinejson)\n        }\n    }\n}"]}]}