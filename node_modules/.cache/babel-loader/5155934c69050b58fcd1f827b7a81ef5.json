{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js??ref--13-0!/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js","mtime":1623551342808},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9zb29ua3BhaWsvRGVza3RvcC9OWUMgUHJvamVjdC9jb2RlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJvcm9TdW1tYXJ5OiBbLy8ge3llYXI6MjAyMSwgY291bnR5OidCcm9va2x5bicsdG90YWxDb3VudDp1bmRlZmluZWQsdG90YWxDb3N0OnVuZGVmaW5lZH0sCiAgICAgICAgLy8ge3llYXI6MjAyMSwgY291bnR5OidCcm9va2x5bicsdG90YWxDb3VudDp1bmRlZmluZWQsdG90YWxDb3N0OnVuZGVmaW5lZH0sCiAgICAgICAgLy8ge3llYXI6MjAyMSwgY291bnR5OidCcm9va2x5bicsdG90YWxDb3VudDp1bmRlZmluZWQsdG90YWxDb3N0OnVuZGVmaW5lZH0sCiAgICAgICAgLy8ge3llYXI6MjAyMSwgY291bnR5OidCcm9va2x5bicsdG90YWxDb3VudDp1bmRlZmluZWQsdG90YWxDb3N0OnVuZGVmaW5lZH0sCiAgICAgIF0sCiAgICAgIHllYXI6IHVuZGVmaW5lZAogICAgfTsKICB9LAogIG11dGF0aW9uczogewogICAgeWVhckNoYW5nZTogZnVuY3Rpb24geWVhckNoYW5nZShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS55ZWFyID0gcGF5bG9hZDsKICAgIH0sCiAgICBjcmVhdGVTdW1tYXJ5OiBmdW5jdGlvbiBjcmVhdGVTdW1tYXJ5KHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLmJvcm9TdW1tYXJ5ID0gW107IC8vIHN0YXRlLmJvcm9TdW1tYXJ5LnB1c2gocGF5bG9hZCkKICAgICAgLy8gJ0JLJywnUU4nLCdNTicsJ0JYJwoKICAgICAgZnVuY3Rpb24gc3VtKGFyciwga2V5KSB7CiAgICAgICAgcmV0dXJuIGFyci5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHJldHVybiBwYXJzZUludChhKSArIChwYXJzZUludChiW2tleV0pIHx8IDApOwogICAgICAgIH0sIDApOwogICAgICB9CgogICAgICB2YXIgY291bnRpZXMgPSBbJ0JLJywgJ1FOJywgJ01OJywgJ0JYJ107CiAgICAgIHZhciBjb2xvckFycmF5ID0gWycjNjZDOEZGJywgJyNGNTg1ODYnLCAnIzJEQzczRScsICcjREJENDVCJ107CiAgICAgIGNvdW50aWVzLmZvckVhY2goZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICB2YXIgdGFyZ2V0QXJyID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24gKHQpIHsKICAgICAgICAgIHJldHVybiB0LkNvdW50eSA9PSBkOwogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKHRhcmdldEFycik7CiAgICAgICAgdmFyIGNvc3RTdW0gPSBzdW0odGFyZ2V0QXJyLCAnUGF5bWVudCBBbW91bnQnKTsKICAgICAgICB2YXIgdGlja2V0U3VtID0gdGFyZ2V0QXJyLmxlbmd0aDsKICAgICAgICB2YXIgY29sb3IgPSBjb2xvckFycmF5W2ldOwogICAgICAgIHZhciBjb3VudHkgPSBjb3VudGllc1tpXTsKICAgICAgICB2YXIgeWVhciA9IHN0YXRlLnllYXI7CiAgICAgICAgdmFyIG9iaiA9IHsKICAgICAgICAgIHllYXI6IHllYXIsCiAgICAgICAgICBjb3VudHk6IGNvdW50eSwKICAgICAgICAgIGNvdW50OiB0aWNrZXRTdW0sCiAgICAgICAgICBjb3N0OiBjb3N0U3VtLAogICAgICAgICAgY29sb3I6IGNvbG9yLAogICAgICAgICAgaW5kZXg6IGkKICAgICAgICB9OwogICAgICAgIHN0YXRlLmJvcm9TdW1tYXJ5LnB1c2gob2JqKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBib3JvU3VtbWFyeTogZnVuY3Rpb24gYm9yb1N1bW1hcnkoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmJvcm9TdW1tYXJ5OwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgbG9hZERhdGE6IGZ1bmN0aW9uIGxvYWREYXRhKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgeWVhciwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB5ZWFyID0gcGF5bG9hZDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCd5ZWFyQ2hhbmdlJywgeWVhcik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBkMy5qc29uKCIiLmNvbmNhdCh5ZWFyLCAiZGF0YS5qc29uIikpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdjcmVhdGVTdW1tYXJ5JywgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9IC8vIGdldHRlcnM6IGdldHRlcnMKCn07"},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js"],"names":["d3","namespaced","state","boroSummary","year","undefined","mutations","yearChange","payload","createSummary","data","sum","arr","key","reduce","a","b","parseInt","counties","colorArray","forEach","d","i","targetArr","filter","t","County","console","log","costSum","ticketSum","length","color","county","obj","count","cost","index","push","getters","actions","loadData","context","commit","json"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            boroSummary: [\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n            ],\n            year: undefined,\n        }\n    },\n    mutations: {\n        yearChange(state, payload) {\n            state.year = payload\n        },\n        createSummary(state, data) {\n            state.boroSummary = [];\n            // state.boroSummary.push(payload)\n            // 'BK','QN','MN','BX'\n            function sum(arr, key) {\n                return arr.reduce((a, b) => parseInt(a) + (parseInt(b[key]) || 0), 0)\n            }\n            const counties = ['BK', 'QN', 'MN', 'BX'];\n            const colorArray = ['#66C8FF', '#F58586', '#2DC73E', '#DBD45B'];\n            counties.forEach((d, i) => {\n\n                const targetArr = data.filter(t => t.County == d);\n                console.log(targetArr)\n                const costSum = sum(targetArr, 'Payment Amount');\n                const ticketSum = targetArr.length;\n                const color = colorArray[i];\n                const county = counties[i];\n                const year = state.year;\n                const obj = { year: year, county: county, count: ticketSum, cost: costSum, color: color, index: i }\n                state.boroSummary.push(obj)\n            })\n        }\n    },\n    getters: {\n        boroSummary(state) {\n            return state.boroSummary\n        }\n    },\n    actions: {\n        async loadData(context, payload) {\n\n            const year = payload;\n            context.commit('yearChange', year)\n            const data = await d3.json(`${year}data.json`);\n            context.commit('createSummary', data)\n\n        }\n\n    }\n    // getters: getters\n}"]}]}