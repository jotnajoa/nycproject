{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughView.vue?vue&type=template&id=658446f2&scoped=true","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughView.vue","mtime":1624304531760},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHdpdGhDdHggYXMgX3dpdGhDdHgsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTY1ODQ0NmYyIik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi02NTg0NDZmMiIpOwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgaWQ6ICJtYXAiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9ib3JvdWdoX2FuYWx5c2lzID0gX3Jlc29sdmVDb21wb25lbnQoImJvcm91Z2gtYW5hbHlzaXMiKTsKCiAgdmFyIF9jb21wb25lbnRfbG9hZGluZ19zcGlubmVyID0gX3Jlc29sdmVDb21wb25lbnQoImxvYWRpbmctc3Bpbm5lciIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2hvaXN0ZWRfMSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYm9yb3VnaF9hbmFseXNpcyksICRvcHRpb25zLmlzTG9hZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2xvYWRpbmdfc3Bpbm5lciwgewogICAga2V5OiAwCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhJZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLmlzTG9hZGluZyksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfSk7"},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/views/BoroughView.vue"],"names":[],"mappings":";;;;;;8BAEM,YAAA,CAEM,KAFN,EAEM;AAFD,EAAA,EAAE,EAAC;AAEF,CAFN,EAAa,IAAb,EAAa,CAAA;AAAA;AAAb,C;;;;;;;;;sDAAA,U,EAGA,YAAA,CAGoB,2BAHpB,C,EAKqB,QAAA,CAAA,S,kBAAvB,YAAA,CAEkB,0BAFlB,EAEkB;AAAA,IAAA,GAAA,EAAA;AAAA,GAFlB,EAEkB;qBADlB;AAAA,aAAa,C,kCAAX,QAAA,CAAA,S,GAAS;AAAA;OAAE,CAAb;AAAA,K,CACkB;;;;AAAA,GAFlB,C","sourcesContent":["<template>\n\n      <div id=\"map\">\n\n      </div>\n      <borough-analysis\n      \n      \n      ></borough-analysis>\n\n    <loading-spinner v-if='isLoading'>\n    {{isLoading}}\n    </loading-spinner>\n\n\n\n</template>\n<script>\nvar map;\nconsole.log(map)\nimport * as d3 from 'd3'\nimport mapboxgl from 'mapbox-gl'\nexport default {\n  props:['county'],\n  data(){\n    return{\n      accessToken:'pk.eyJ1Ijoiam90bmFqb2EiLCJhIjoiY2tibnV5bmx0MGF5eTJxcG40NXpvOXB6eCJ9.__awhLNPyWEzCNoGzsM3Pw',\n      mapStyle:'mapbox://styles/jotnajoa/ckpog2xlj0rjp19qjnvu8lg3v',\n      zoomLevel:12.5,\n      viewOrigin:[-73.8, 40.7],\n      maploaded:false\n    }\n  },\n  methods:{\n    async loadJson(){\n      this.$store.dispatch('loadingChange',true);\n      // let something = await d3.json('precinctGeodata.geojson');\n      // console.log(something)\n      // await this.$store.dispatch('ByBorough/generateGeoJson');\n      this.$store.dispatch('loadingChange',false);\n    },\n    createLayer(year){\n      console.log(year)\n      map.addSource('precinct',{\n        type:'geojson',\n        data:this.precinctGeoJson\n      });\n\n      map.addLayer({\n        'id':'precincts',\n        'type':'fill',\n        'source':'precinct',\n        'paint':{\n          'fill-color':'#ff0000',\n          'fill-opacity':0\n        }\n      })\n\n    },\n    filterCounty(selectedCounty){\n      selectedCounty\n    },\n    createContourLine(selectedPrecinct){\n      selectedPrecinct\n    }\n  },\n  computed:{\n    yearSelected(){\n      return this.$store.getters.yearSelected;\n    },\n    selectedCounty(){\n      return this.$store.getters.boroughSelected;\n    },\n    precinctGeoJson(){\n      return this.$store.getters['ByBorough/prcinctGeoJson'];\n    },\n    isLoading(){\n    return this.$store.getters.isLoading\n    },\n  },\n  async mounted(){\n    mapboxgl.accessToken=this.accessToken\n    map=new mapboxgl.Map({\n    container: 'map',\n    style: this.mapStyle,\n    zoom: this.zoomLevel,\n    center: this.viewOrigin,\n    pitch: 60,\n    antialias: true // create the gl context with MSAA antialiasing, so custom layers are antialiased\n    });\n    let data=await d3.json('precinctGeodata.geojson');\n    console.log(data)\n    // this.createLayer(this.yearSelected)\n    this.loadJson()\n}\n}\n</script>\n<style scoped>\n#map{\n  position:absolute;\n  width:100vw;\n  height:100vh;\n  margin:0;\n  left:0;\n  top:0;\n  z-index:0;\n};\n\n.sub{\n  position:absolute;\n  z-index:5;\n  top:10rem;\n  left:10rem;\n  margin:0;\n  padding:0;\n}\n\n</style>"],"sourceRoot":""}]}