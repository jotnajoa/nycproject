{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js??ref--13-0!/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js","mtime":1623858246839},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9zb29ua3BhaWsvRGVza3RvcC9OWUMgUHJvamVjdC9jb2RlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvc29vbmtwYWlrL0Rlc2t0b3AvTllDIFByb2plY3QvY29kZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBib3JvU3VtbWFyeTogWy8vIHt5ZWFyOjIwMjEsIGNvdW50eTonQnJvb2tseW4nLHRvdGFsQ291bnQ6dW5kZWZpbmVkLHRvdGFsQ29zdDp1bmRlZmluZWR9LAogICAgICAgIC8vIHt5ZWFyOjIwMjEsIGNvdW50eTonQnJvb2tseW4nLHRvdGFsQ291bnQ6dW5kZWZpbmVkLHRvdGFsQ29zdDp1bmRlZmluZWR9LAogICAgICAgIC8vIHt5ZWFyOjIwMjEsIGNvdW50eTonQnJvb2tseW4nLHRvdGFsQ291bnQ6dW5kZWZpbmVkLHRvdGFsQ29zdDp1bmRlZmluZWR9LAogICAgICAgIC8vIHt5ZWFyOjIwMjEsIGNvdW50eTonQnJvb2tseW4nLHRvdGFsQ291bnQ6dW5kZWZpbmVkLHRvdGFsQ29zdDp1bmRlZmluZWR9LAogICAgICBdLAogICAgICB5ZWFyOiAyMDIxCiAgICB9OwogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB5ZWFyQ2hhbmdlOiBmdW5jdGlvbiB5ZWFyQ2hhbmdlKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnllYXIgPSBwYXlsb2FkOwogICAgfSwKICAgIGNyZWF0ZVN1bW1hcnk6IGZ1bmN0aW9uIGNyZWF0ZVN1bW1hcnkoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuYm9yb1N1bW1hcnkgPSBbXTsgLy8gc3RhdGUuYm9yb1N1bW1hcnkucHVzaChwYXlsb2FkKQogICAgICAvLyAnQksnLCdRTicsJ01OJywnQlgnCgogICAgICBmdW5jdGlvbiBzdW0oYXJyLCBrZXkpIHsKICAgICAgICByZXR1cm4gYXJyLnJlZHVjZShmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGEpICsgKHBhcnNlSW50KGJba2V5XSkgfHwgMCk7CiAgICAgICAgfSwgMCk7CiAgICAgIH0KCiAgICAgIHZhciBjb3VudGllcyA9IFsnQksnLCAnUU4nLCAnTU4nLCAnQlgnXTsKICAgICAgdmFyIGNvbG9yQXJyYXkgPSBbJyM2NkM4RkYnLCAnI0Y1ODU4NicsICcjMkRDNzNFJywgJyNEQkQ0NUInXTsKICAgICAgY291bnRpZXMuZm9yRWFjaChmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHZhciB0YXJnZXRBcnIgPSBkYXRhLmZpbHRlcihmdW5jdGlvbiAodCkgewogICAgICAgICAgcmV0dXJuIHQuQ291bnR5ID09IGQ7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIHBsYXRlQXJyID0gdGFyZ2V0QXJyLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuUGxhdGU7CiAgICAgICAgfSk7CgogICAgICAgIHZhciB1bmlxdWVQbGF0ZSA9IF90b0NvbnN1bWFibGVBcnJheShuZXcgU2V0KHBsYXRlQXJyKSk7CgogICAgICAgIHZhciBwbGF0ZUNvdW50ID0gdW5pcXVlUGxhdGUubGVuZ3RoOwogICAgICAgIHZhciBjb3N0U3VtID0gc3VtKHRhcmdldEFyciwgJ1BheW1lbnQgQW1vdW50Jyk7CiAgICAgICAgdmFyIHRpY2tldFN1bSA9IHRhcmdldEFyci5sZW5ndGg7CiAgICAgICAgdmFyIGNvbG9yID0gY29sb3JBcnJheVtpXTsKICAgICAgICB2YXIgY291bnR5ID0gY291bnRpZXNbaV07CiAgICAgICAgdmFyIHllYXIgPSBzdGF0ZS55ZWFyOwogICAgICAgIHZhciBvYmogPSB7CiAgICAgICAgICB5ZWFyOiB5ZWFyLAogICAgICAgICAgY291bnR5OiBjb3VudHksCiAgICAgICAgICBjb3VudDogdGlja2V0U3VtLAogICAgICAgICAgY29zdDogY29zdFN1bSwKICAgICAgICAgIGNvbG9yOiBjb2xvciwKICAgICAgICAgIGluZGV4OiBpLAogICAgICAgICAgcGxhdGVDb3VudDogcGxhdGVDb3VudAogICAgICAgIH07CiAgICAgICAgc3RhdGUuYm9yb1N1bW1hcnkucHVzaChvYmopOwogICAgICB9KTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGJvcm9TdW1tYXJ5OiBmdW5jdGlvbiBib3JvU3VtbWFyeShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuYm9yb1N1bW1hcnk7CiAgICB9LAogICAgeWVhcjogZnVuY3Rpb24geWVhcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUueWVhcjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHllYXIsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgeWVhciA9IHBheWxvYWQ7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgneWVhckNoYW5nZScsIHllYXIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZDMuanNvbigiIi5jb25jYXQoeWVhciwgImRhdGEuanNvbiIpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnY3JlYXRlU3VtbWFyeScsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSAvLyBnZXR0ZXJzOiBnZXR0ZXJzCgp9Ow=="},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/store/Landing/index.js"],"names":["d3","namespaced","state","boroSummary","year","mutations","yearChange","payload","createSummary","data","sum","arr","key","reduce","a","b","parseInt","counties","colorArray","forEach","d","i","targetArr","filter","t","County","plateArr","map","Plate","uniquePlate","Set","plateCount","length","costSum","ticketSum","color","county","obj","count","cost","index","push","getters","actions","loadData","context","commit","json"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            boroSummary: [\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n                // {year:2021, county:'Brooklyn',totalCount:undefined,totalCost:undefined},\n            ],\n            year: 2021,\n        }\n    },\n    mutations: {\n        yearChange(state, payload) {\n            state.year = payload\n        },\n        createSummary(state, data) {\n            state.boroSummary = [];\n            // state.boroSummary.push(payload)\n            // 'BK','QN','MN','BX'\n            function sum(arr, key) {\n                return arr.reduce((a, b) => parseInt(a) + (parseInt(b[key]) || 0), 0)\n            }\n\n            const counties = ['BK', 'QN', 'MN', 'BX'];\n            const colorArray = ['#66C8FF', '#F58586', '#2DC73E', '#DBD45B'];\n            counties.forEach((d, i) => {\n\n                const targetArr = data.filter(t => t.County == d);\n\n                const plateArr = targetArr.map(d => d.Plate);\n                const uniquePlate = [...new Set(plateArr)]\n                const plateCount = uniquePlate.length;\n                const costSum = sum(targetArr, 'Payment Amount');\n                const ticketSum = targetArr.length;\n                const color = colorArray[i];\n                const county = counties[i];\n                const year = state.year;\n                const obj = { year: year, county: county, count: ticketSum, cost: costSum, color: color, index: i, plateCount: plateCount }\n                state.boroSummary.push(obj)\n            })\n        }\n    },\n    getters: {\n        boroSummary(state) {\n            return state.boroSummary\n        },\n        year(state) {\n            return state.year\n        }\n    },\n    actions: {\n        async loadData(context, payload) {\n\n            const year = payload;\n            context.commit('yearChange', year)\n            const data = await d3.json(`${year}data.json`);\n            context.commit('createSummary', data);\n\n\n        }\n\n    }\n    // getters: getters\n}"]}]}