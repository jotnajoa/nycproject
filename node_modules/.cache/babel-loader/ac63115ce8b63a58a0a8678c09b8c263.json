{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js!/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js??ref--13-0!/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByTicketData/index.js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByTicketData/index.js","mtime":1624655474348},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvc29vbmtwYWlrL0Rlc2t0b3AvTllDIFByb2plY3QvY29kZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3Nvb25rcGFpay9EZXNrdG9wL05ZQyBQcm9qZWN0L2NvZGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhcmdldFllYXJEYXRhOiB1bmRlZmluZWQsCiAgICAgIHRhcmdldFllYXI6IDIwMjEsCiAgICAgIHRhcmdldFByZWNpbmN0OiB1bmRlZmluZWQsCiAgICAgIGZyZXF1ZW5jeVBlcnBsYXRlOiB1bmRlZmluZWQsCiAgICAgIGJ5TW9udGhEYXRhOiB1bmRlZmluZWQsCiAgICAgIGJ5Q29zdERhdGE6IHVuZGVmaW5lZCwKICAgICAgcHJlY2luY3RDb3N0OiB1bmRlZmluZWQsCiAgICAgIGJvcm91Z2hBdmdDb3N0OiB1bmRlZmluZWQsCiAgICAgIHByZWNpbmN0RnJlcTogdW5kZWZpbmVkLAogICAgICBib3JvdWdoQXZnRnJlcTogdW5kZWZpbmVkCiAgICB9OwogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBjcmVhdGVZZWFyRGF0YTogZnVuY3Rpb24gY3JlYXRlWWVhckRhdGEoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudGFyZ2V0WWVhckRhdGEgPSBwYXlsb2FkOwogICAgfSwKICAgIGNoYW5nZVRhcmdldFllYXI6IGZ1bmN0aW9uIGNoYW5nZVRhcmdldFllYXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudGFyZ2V0WWVhciA9IHBheWxvYWQ7CiAgICB9LAogICAgc2V0VGFyZ2V0UHJlY2luY3Q6IGZ1bmN0aW9uIHNldFRhcmdldFByZWNpbmN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIC8vIHNpbmNlIHBhcmVudCBzdG9yZSBkb2Vzbid0IHN0b3JlIHByZWNpbmN0IGxldmVsIHNlbGVjdGlvbgogICAgICBzdGF0ZS50YXJnZXRQcmVjaW5jdCA9IHBheWxvYWQ7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBjaGFuZ2VUYXJnZXRZZWFyOiBmdW5jdGlvbiBjaGFuZ2VUYXJnZXRZZWFyKGNvbnRleHQpIHsKICAgICAgdmFyIHNlbGVjdGVkWWVhciA9IGNvbnRleHQucm9vdEdldHRlcnMueWVhclNlbGVjdGVkOwogICAgICBjb250ZXh0LmNvbW1pdCgnY2hhbmdlVGFyZ2V0WWVhcicsIHNlbGVjdGVkWWVhcik7CiAgICB9LAogICAgbG9hZFllYXJEYXRhOiBmdW5jdGlvbiBsb2FkWWVhckRhdGEoY29udGV4dCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB5ZWFyLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHllYXIgPSBjb250ZXh0LnN0YXRlLnRhcmdldFllYXI7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBkMy5qc29uKCIiLmNvbmNhdCh5ZWFyLCAiZGF0YS5qc29uIikpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ2NyZWF0ZVllYXJEYXRhJywgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzZXRUYXJnZXRQcmVjaW5jdDogZnVuY3Rpb24gc2V0VGFyZ2V0UHJlY2luY3QoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0VGFyZ2V0UHJlY2luY3QnLCBwYXlsb2FkKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIHRhcmdldFByZWNpbmN0OiBmdW5jdGlvbiB0YXJnZXRQcmVjaW5jdChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudGFyZ2V0UHJlY2luY3Q7CiAgICB9LAogICAgdGFyZ2V0WWVhckRhdGE6IGZ1bmN0aW9uIHRhcmdldFllYXJEYXRhKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50YXJnZXRZZWFyRGF0YTsKICAgIH0sCiAgICBwcmVjaW5jdENvc3Q6IGZ1bmN0aW9uIHByZWNpbmN0Q29zdChzdGF0ZSkgewogICAgICBpZiAoc3RhdGUudGFyZ2V0WWVhckRhdGEpIHsKICAgICAgICB2YXIgdGFyZ2V0UHJlY2luY3QgPSBzdGF0ZS50YXJnZXRQcmVjaW5jdDsKICAgICAgICB2YXIgcHJlY2luY3RBcnIgPSBzdGF0ZS50YXJnZXRZZWFyRGF0YS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydQcmVjaW5jdCddID09IHRhcmdldFByZWNpbmN0OwogICAgICAgIH0pOwogICAgICAgIHZhciBjb3N0QXJyID0gcHJlY2luY3RBcnIubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZFsnUGF5bWVudCBBbW91bnQnXTsKICAgICAgICB9KTsKICAgICAgICB2YXIgY29zdFN1bSA9IGNvc3RBcnIucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICByZXR1cm4gYSArIGI7CiAgICAgICAgfSwgMCk7CiAgICAgICAgcmV0dXJuIGNvc3RTdW07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KICAgIH0sCiAgICBib3JvdWdoQXZnQ29zdDogZnVuY3Rpb24gYm9yb3VnaEF2Z0Nvc3Qoc3RhdGUsIGdldHRlcnMsIF8sIHJvb3RHZXR0ZXJzKSB7CiAgICAgIHZhciB0YXJnZXRCb3JvdWdoID0gcm9vdEdldHRlcnMuYm9yb3VnaFNlbGVjdGVkOwogICAgICB2YXIgYm9yb3VnaEluaXRpYWwgPSB0YXJnZXRCb3JvdWdoID09ICdNYW5oYXR0YW4nID8gJ01OJyA6IHRhcmdldEJvcm91Z2ggPT0gJ0Jyb29rbHluJyA/ICdCSycgOiB0YXJnZXRCb3JvdWdoID09ICdRdWVlbnMnID8gJ1FOJyA6IHRhcmdldEJvcm91Z2ggPT0gJ0Jyb254JyA/ICdCWCcgOiAndW5rbm93bic7CiAgICAgIHZhciBib3JvdWdoQXJyID0gQXJyYXkuZnJvbShzdGF0ZS50YXJnZXRZZWFyRGF0YS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZFsnQ291bnR5J10gPT0gYm9yb3VnaEluaXRpYWw7CiAgICAgIH0pKTsKICAgICAgdmFyIGNvc3RBcnIgPSBib3JvdWdoQXJyLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkWydQYXltZW50IEFtb3VudCddOwogICAgICB9KTsKICAgICAgdmFyIGNvc3RTdW0gPSBjb3N0QXJyLnJlZHVjZShmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhICsgYjsKICAgICAgfSwgMCk7CiAgICAgIHZhciBib3JvdWdoUHJlY2luY3RVbmlxdWVBcnIgPSBbXTsKICAgICAgYm9yb3VnaEFyci5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgYm9yb3VnaFByZWNpbmN0VW5pcXVlQXJyLnB1c2goZFsnUHJlY2luY3QnXSk7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhib3JvdWdoUHJlY2luY3RVbmlxdWVBcnIpOwoKICAgICAgdmFyIHVuaXFQcmVjaW5jdCA9IF90b0NvbnN1bWFibGVBcnJheShuZXcgU2V0KGJvcm91Z2hQcmVjaW5jdFVuaXF1ZUFycikpOwoKICAgICAgdmFyIGJvcm91Z2hMZW5ndGggPSB1bmlxUHJlY2luY3QubGVuZ3RoOwogICAgICB2YXIgYXZnQ29zdCA9IE1hdGgucm91bmQoY29zdFN1bSAqIDEwIC8gYm9yb3VnaExlbmd0aCkgLyAxMDsKICAgICAgcmV0dXJuIGF2Z0Nvc3Q7CiAgICB9LAogICAgc2VsZWN0ZWRCb3JvdWdoRGF0YTogZnVuY3Rpb24gc2VsZWN0ZWRCb3JvdWdoRGF0YShzdGF0ZSwgZ2V0dGVycywgXywgcm9vdEdldHRlcnMpIHsKICAgICAgLy8g7ISg7YOd65CcIGJvcm91Z2gKICAgICAgdmFyIHRhcmdldEJvcm91Z2ggPSByb290R2V0dGVycy5ib3JvdWdoU2VsZWN0ZWQ7CiAgICAgIHZhciBib3JvdWdoSW5pdGlhbCA9IHRhcmdldEJvcm91Z2ggPT0gJ01hbmhhdHRhbicgPyAnTU4nIDogdGFyZ2V0Qm9yb3VnaCA9PSAnQnJvb2tseW4nID8gJ0JLJyA6IHRhcmdldEJvcm91Z2ggPT0gJ1F1ZWVucycgPyAnUU4nIDogdGFyZ2V0Qm9yb3VnaCA9PSAnQnJvbngnID8gJ0JYJyA6ICd1bmtub3duJzsKICAgICAgdmFyIGJvcm91Z2hBcnIgPSBBcnJheS5mcm9tKHN0YXRlLnRhcmdldFllYXJEYXRhLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkWydDb3VudHknXSA9PSBib3JvdWdoSW5pdGlhbDsKICAgICAgfSkpOwogICAgICBjb25zb2xlLmxvZyhib3JvdWdoQXJyKTsKICAgICAgcmV0dXJuIGJvcm91Z2hBcnI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/store/ByTicketData/index.js"],"names":["d3","namespaced","state","targetYearData","undefined","targetYear","targetPrecinct","frequencyPerplate","byMonthData","byCostData","precinctCost","boroughAvgCost","precinctFreq","boroughAvgFreq","mutations","createYearData","payload","changeTargetYear","setTargetPrecinct","actions","context","selectedYear","rootGetters","yearSelected","commit","loadYearData","year","json","data","console","log","getters","precinctArr","filter","d","costArr","map","costSum","reduce","a","b","_","targetBorough","boroughSelected","boroughInitial","boroughArr","Array","from","boroughPrecinctUniqueArr","forEach","push","uniqPrecinct","Set","boroughLength","length","avgCost","Math","round","selectedBoroughData"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            targetYearData: undefined,\n            targetYear: 2021,\n            targetPrecinct: undefined,\n            frequencyPerplate: undefined,\n            byMonthData: undefined,\n            byCostData: undefined,\n            precinctCost: undefined,\n            boroughAvgCost: undefined,\n            precinctFreq: undefined,\n            boroughAvgFreq: undefined,\n        }\n    },\n    mutations: {\n        createYearData(state, payload) {\n            state.targetYearData = payload\n        },\n        changeTargetYear(state, payload) {\n            state.targetYear = payload\n        },\n        setTargetPrecinct(state, payload) {\n            // since parent store doesn't store precinct level selection\n            state.targetPrecinct = payload\n        }\n    },\n    actions: {\n\n        changeTargetYear(context) {\n            const selectedYear = context.rootGetters.yearSelected;\n            context.commit('changeTargetYear', selectedYear)\n        },\n\n        async loadYearData(context) {\n            const year = context.state.targetYear;\n            const data = await d3.json(`${year}data.json`);\n            console.log(data)\n            context.commit('createYearData', data);\n        },\n\n        setTargetPrecinct(context, payload) {\n            context.commit('setTargetPrecinct', payload)\n        }\n    },\n    getters: {\n        targetPrecinct(state) {\n            return state.targetPrecinct;\n        },\n        targetYearData(state) {\n            return state.targetYearData;\n        },\n        precinctCost(state) {\n            if (state.targetYearData) {\n                const targetPrecinct = state.targetPrecinct;\n                const precinctArr = state.targetYearData.filter((d) => {\n                    return d['Precinct'] == targetPrecinct\n                });\n                const costArr = precinctArr.map(d => d['Payment Amount']);\n                const costSum = costArr.reduce((a, b) => { return a + b }, 0);\n\n                return costSum\n            } else {\n                return 0;\n            }\n\n\n        },\n        boroughAvgCost(state, getters, _, rootGetters) {\n\n            var targetBorough = rootGetters.boroughSelected;\n            var boroughInitial = targetBorough == 'Manhattan' ? 'MN' :\n                targetBorough == 'Brooklyn' ? 'BK' :\n                targetBorough == 'Queens' ? 'QN' :\n                targetBorough == 'Bronx' ? 'BX' : 'unknown';\n\n            const boroughArr = Array.from(state.targetYearData.filter(d => d['County'] == boroughInitial));\n            const costArr = boroughArr.map(d => d['Payment Amount']);\n            const costSum = costArr.reduce((a, b) => { return a + b }, 0);\n\n\n            var boroughPrecinctUniqueArr = []\n            boroughArr.forEach((d) => {\n                boroughPrecinctUniqueArr.push(d['Precinct'])\n            })\n            console.log(boroughPrecinctUniqueArr)\n            var uniqPrecinct = [...new Set(boroughPrecinctUniqueArr)]\n            const boroughLength = uniqPrecinct.length;\n            const avgCost = Math.round(costSum * 10 / boroughLength) / 10;\n            return avgCost\n        },\n        selectedBoroughData(state, getters, _, rootGetters) {\n            // 선택된 borough\n            var targetBorough = rootGetters.boroughSelected;\n            var boroughInitial = targetBorough == 'Manhattan' ? 'MN' :\n                targetBorough == 'Brooklyn' ? 'BK' :\n                targetBorough == 'Queens' ? 'QN' :\n                targetBorough == 'Bronx' ? 'BX' : 'unknown';\n\n            const boroughArr = Array.from(state.targetYearData.filter(d => d['County'] == boroughInitial));\n            console.log(boroughArr)\n            return boroughArr\n        }\n    }\n}"]}]}