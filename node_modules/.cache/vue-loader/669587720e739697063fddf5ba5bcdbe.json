{"remainingRequest":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/soonkpaik/Desktop/NYC Project/code/src/components/UI/LineGraph.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/soonkpaik/Desktop/NYC Project/code/src/components/UI/LineGraph.vue","mtime":1624588433725},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/soonkpaik/Desktop/NYC Project/code/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczpbJ3dpZHRoJywnaGVpZ2h0JywnbWFyZ2luJywnZGF0YUdyb3VwJywneEF4aXNOYW1lJywneUF4aXNOYW1lJywnbGluZUNvbG9ycyddLAogICAgZGF0YSgpewogICAgICAgIHJldHVybnsKICAgICAgICAgICAgeEF4aXM6dW5kZWZpbmVkLAogICAgICAgICAgICB5QXhpczp1bmRlZmluZWQsCiAgICAgICAgICAgIHhNYXg6MCx5TWF4OjAseE1pbjowLHlNaW46MCwKICAgICAgICAgICAgeFNjYWxlOnVuZGVmaW5lZCx5U2NhbGU6dW5kZWZpbmVkCiAgICAgICAgfQoKICAgIH0sCiAgICBjb21wdXRlZDp7CiAgICAgICAgZ3JhcGhEYXRhKCl7CiAgICAgICAgICAgIHZhciBjbG9uZWQ9IFsuLi50aGlzLmRhdGFHcm91cF0KICAgICAgICAgICAgcmV0dXJuIGNsb25lZC5zb3J0KChhLGIpPT5kMy5hc2NlbmRpbmcoYVt0aGlzLnhBeGlzTmFtZV0sYlt0aGlzLnhBeGlzTmFtZV0pKQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgICBhZGRMYWJlbCgpewogICAgICAgICAgICBkMy5zZWxlY3QoJ3N2ZycpLmFwcGVuZCgndGV4dCcpLmNsYXNzZWQoJ3gtbGFiZWwnLHRydWUpCiAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLGB0cmFuc2xhdGUoJHt0aGlzLndpZHRoLXRoaXMubWFyZ2luLmhvcml6b250YWwqMS41fSwke3RoaXMuaGVpZ2h0LXRoaXMubWFyZ2luLnZlcnRpY2FsfSlgKQogICAgICAgICAgICAudGV4dCgnY29zdCcpLnN0eWxlKCdmaWxsJywnI0YxRjVGQicpLnN0eWxlKCdmb250LXNpemUnLCcxMHB4JykKCgogICAgICAgICAgICBkMy5zZWxlY3QoJ3N2ZycpLmFwcGVuZCgndGV4dCcpLmNsYXNzZWQoJ3ktbGFiZWwnLHRydWUpCiAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLGB0cmFuc2xhdGUoJHswfSwke3RoaXMubWFyZ2luLnZlcnRpY2FsLzJ9KWApCiAgICAgICAgICAgIC50ZXh0KHRoaXMueUF4aXNOYW1lKS5zdHlsZSgnZmlsbCcsJyNGMUY1RkInKS5zdHlsZSgnZm9udC1zaXplJywnMTBweCcpCiAgICAgICAgfSwKICAgICAgICBkZWZpbmVEYXRhS2V5cygpewogICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YWdyb3VwIHdhcyBub3QgbG9hZGVkPycsdGhpcy5kYXRhR3JvdXApCiAgICAgICAgICAgIC8vIHRoaXMueEF4aXNOYW1lPU9iamVjdC5rZXlzKHRoaXMuZGF0YUdyb3VwWzBdWzBdKVswXTsKICAgICAgICAgICAgLy8gdGhpcy55QXhpc05hbWU9T2JqZWN0LmtleXModGhpcy5kYXRhR3JvdXBbMF1bMF0pWzFdOwogICAgICAgIH0sCiAgICAgICAgLy8gCiAgICAgICAgY3JlYXRlQXhpcygpewoKICAgICAgICAgICAgdmFyIHhFeHRlbnRzID1bXSA7CiAgICAgICAgICAgIAogICAgICAgICAgICB0aGlzLmdyYXBoRGF0YS5mb3JFYWNoKChkKT0+ewogICAgICAgICAgICAgICAgdmFyIHN1YkFyciA9IGQ7CiAgICAgICAgICAgICAgICB2YXIgZXh0ZW50cyA9IHN1YkFyci5tYXAodD0+dFt0aGlzLnhBeGlzTmFtZV0pOwogICAgICAgICAgICAgICAgeEV4dGVudHMucHVzaChleHRlbnRzKQogICAgICAgICAgICB9KQoKICAgICAgICAgICAgdmFyIG1heFh2YWxzID1bXTsKCiAgICAgICAgICAgIHhFeHRlbnRzLmZvckVhY2goKHQpPT57CiAgICAgICAgICAgICAgICBtYXhYdmFscy5wdXNoKGQzLm1heCh0KSkKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIAogICAgICAgICAgICB2YXIgeUV4dGVudHMgPSBbXTsKICAgICAgICAgICAgCiAgICAgICAgICAgIHRoaXMuZ3JhcGhEYXRhLmZvckVhY2goKGQpPT57CiAgICAgICAgICAgICAgICB2YXIgc3ViQXJyID0gZDsKICAgICAgICAgICAgICAgIHZhciBleHRlbnRzID0gc3ViQXJyLm1hcCh0PT50W3RoaXMueUF4aXNOYW1lXSk7CiAgICAgICAgICAgICAgICB5RXh0ZW50cy5wdXNoKGV4dGVudHMpCiAgICAgICAgICAgIH0pCgogICAgICAgICAgICB2YXIgbWF4WXZhbHM9W107CiAgICAgICAgICAgIHlFeHRlbnRzLmZvckVhY2goKHQpPT57CiAgICAgICAgICAgICAgICBtYXhZdmFscy5wdXNoKGQzLm1heCh0KSkKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICB0aGlzLnhNYXg9IGQzLm1heChtYXhYdmFscyk7CiAgICAgICAgICAgIHRoaXMueU1heD0gZDMubWF4KG1heFl2YWxzKTsKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMueE1heCx0aGlzLnlNYXgpCgogICAgICAgICAgICB0aGlzLnhTY2FsZSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFt0aGlzLnhNaW4sdGhpcy54TWF4XSkucmFuZ2UoW3RoaXMubWFyZ2luLmhvcml6b250YWwsdGhpcy53aWR0aC10aGlzLm1hcmdpbi5ob3Jpem9udGFsKjJdKQogICAgICAgICAgICB0aGlzLnlTY2FsZSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFt0aGlzLnlNaW4sdGhpcy55TWF4XSkucmFuZ2UoW3RoaXMuaGVpZ2h0LXRoaXMubWFyZ2luLnZlcnRpY2FsLHRoaXMubWFyZ2luLnZlcnRpY2FsXSk7CiAgICAgICAgICAgIAogICAgICAgICAgICBjb25zdCB4QXhpcyA9IGQzLmF4aXNCb3R0b20odGhpcy54U2NhbGUpOwogICAgICAgICAgICBjb25zdCB5QXhpcyA9IGQzLmF4aXNMZWZ0KHRoaXMueVNjYWxlKTsKCiAgICAgICAgICAgIGQzLnNlbGVjdCgnLngtYXhpcycpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5jYWxsKHhBeGlzLnRpY2tTaXplKDApKQogICAgICAgICAgICBkMy5zZWxlY3QoJy55LWF4aXMnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuY2FsbCh5QXhpcy50aWNrU2l6ZSgtdGhpcy53aWR0aCt0aGlzLm1hcmdpbi5ob3Jpem9udGFsKjIpLnRpY2tzKDEwKSkKICAgICAgICAgICAgZDMuc2VsZWN0KCcueS1heGlzID4gLmRvbWFpbicpLnJlbW92ZSgpCiAgICAgICAgICAgIGQzLnNlbGVjdEFsbCgnLnktYXhpcyA+IC50aWNrID4gbGluZScpLnN0eWxlKCdzdHJva2Utd2lkdGgnLDAuNSkuc3R5bGUoJ29wYWNpdHknLDAuMikuc3R5bGUoInN0cm9rZS1kYXNoYXJyYXkiLCAoIjIsIDIiKSkKICAgICAgICAgICAgZDMuc2VsZWN0KCcueC1heGlzJykuc3R5bGUoJ2NvbG9yJywnI0YxRjVGQicpCiAgICAgICAgICAgIGQzLnNlbGVjdCgnLnktYXhpcycpLnN0eWxlKCdjb2xvcicsJyNGMUY1RkInKQogICAgICAgICAgICBkMy5zZWxlY3RBbGwoJy5kb21haW4nKS5zdHlsZSgnc3Ryb2tlLXdpZHRoJywwLjUpCiAgICAgICAgfSwKICAgICAgICBsaW5lKCl7CiAgICAgICAgICAgIHJldHVybiBkMy5saW5lKCkKICAgICAgICAgICAgLngoZD0+dGhpcy54U2NhbGUoZFt0aGlzLnhBeGlzTmFtZV0pKQogICAgICAgICAgICAueShkPT50aGlzLnlTY2FsZShkW3RoaXMueUF4aXNOYW1lXSkpCiAgICAgICAgfSwKICAgICAgICBkcmF3TGluZXMobGluZWRhdGEsaW5kZXgpewogICAgICAgICAgICAvLyB0aGlzIGxpbmUgZnVuY3Rpb24gd2lsbCBpbnRlcmF0ZSBncmFwaERhdGEgYW5kIHBsb3QgbGluZSBncmFwaHMgb25lIGJ5IG9uZQogICAgICAgICAgICBpZihpbmRleD09MCl7CgogICAgICAgICAgICB2YXIgcGF0aCA9IGQzLnNlbGVjdCgnI2xpbmUtY2hhcnQnKQogICAgICAgICAgICAuYXBwZW5kKCdwYXRoJykKICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywnZ3JhcGgtbGluZScpCiAgICAgICAgICAgIC5jbGFzc2VkKGAke2luZGV4fS1saW5lYCx0cnVlKQogICAgICAgICAgICAuYXR0cignZCcsdGhpcy5saW5lKCkobGluZWRhdGEpKQogICAgICAgICAgICAuYXR0cignc3Ryb2tlJyx0aGlzLmxpbmVDb2xvcnNbaW5kZXhdKQogICAgICAgICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywxKQogICAgICAgICAgICAuYXR0cignZmlsbCcsJ25vbmUnKQogICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLDApCgogICAgICAgICAgICBpZihwYXRoLm5vZGUoKSl7CiAgICAgICAgICAgIHZhciBwYXRoTGVuZ3RoID0gcGF0aC5ub2RlKCkuZ2V0VG90YWxMZW5ndGgoKTsKICAgICAgICAgICAgY29uc29sZS5sb2cocGF0aExlbmd0aCkKCiAgICAgICAgICAgIHBhdGguYXR0cignc3Ryb2tlLWRhc2hhcnJheScscGF0aExlbmd0aCkKICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZS1kYXNob2Zmc2V0JyxwYXRoTGVuZ3RoKQogICAgICAgICAgICAudHJhbnNpdGlvbigpCiAgICAgICAgICAgIC5kdXJhdGlvbigxMDAwKQogICAgICAgICAgICAuYXR0cignc3Ryb2tlLWRhc2hvZmZzZXQnLDApCiAgICAgICAgICAgIC5zdHlsZSgnb3BhY2l0eScsMSkKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIGQzLnNlbGVjdCgnI2xpbmUtY2hhcnQnKQogICAgICAgICAgICAuYXBwZW5kKCdwYXRoJykKICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywnZ3JhcGgtbGluZScpCiAgICAgICAgICAgIC5jbGFzc2VkKGAke2luZGV4fS1saW5lYCx0cnVlKQogICAgICAgICAgICAuYXR0cignZCcsdGhpcy5saW5lKCkobGluZWRhdGEpKQogICAgICAgICAgICAuYXR0cignc3Ryb2tlJyx0aGlzLmxpbmVDb2xvcnNbaW5kZXhdKQogICAgICAgICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywxKQogICAgICAgICAgICAuYXR0cignZmlsbCcsJ25vbmUnKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuYWRkTGFiZWwoKQoKICAgICAgICB9LAogICAgICAgIGNsZWFyTGluZXMoKXsKICAgICAgICAgICAgZDMuc2VsZWN0QWxsKCcuZ3JhcGgtbGluZScpLnJlbW92ZSgpCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKXsKCiAgICAgICAgY29uc3QgdW53YXRjaCA9IHRoaXMuJHdhdGNoKAogICAgICAgICAgICAoKT0+dGhpcy5kYXRhR3JvdXAsCiAgICAgICAgICAgIGRhdGEgPT57CiAgICAgICAgICAgICAgICBpZihkYXRhKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRlZmluZURhdGFLZXlzKCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVBeGlzKCk7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ncmFwaERhdGEuZm9yRWFjaCgoZCxpKT0+ewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYXdMaW5lcyhkLGkpCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB1bndhdGNoKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICkKCiAgICB9LAogICAgdXBkYXRlZCgpewoKICAgICAgICB0aGlzLmNyZWF0ZUF4aXMoKTsKICAgICAgICB0aGlzLmNsZWFyTGluZXMoKTsKICAgICAgICB0aGlzLmdyYXBoRGF0YS5mb3JFYWNoKChkLGkpPT57CiAgICAgICAgICAgIHRoaXMuZHJhd0xpbmVzKGQsaSkKICAgICAgICB9KQoKICAgIH0KfQo="},{"version":3,"sources":["/Users/soonkpaik/Desktop/NYC Project/code/src/components/UI/LineGraph.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAE3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAE/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAE3H,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtxpD,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAElB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB;;YAEA,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB;YACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC;IACJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAEjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtB,CAAC;;oBAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ;YACJ;QACJ;;IAEJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;;IAEL;AACJ","file":"/Users/soonkpaik/Desktop/NYC Project/code/src/components/UI/LineGraph.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <svg \n        v-if='xMax'\n        id='line-chart' :height='height' :width='width'>\n\n            <!-- <path v-for='(data,index) of dataGroup' :key='index' class='line'></path> -->\n            <!-- or I can create them in script -->\n            <g class='axis x-axis' :transform='`translate(${0},${height-margin.vertical})`'></g>\n            <g class='axis y-axis' :transform='`translate(${margin.horizontal},0)`'></g>\n\n<!-- 결국에는 path 도 v-for로 엮어봐야함 -->\n        </svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nexport default {\n    props:['width','height','margin','dataGroup','xAxisName','yAxisName','lineColors'],\n    data(){\n        return{\n            xAxis:undefined,\n            yAxis:undefined,\n            xMax:0,yMax:0,xMin:0,yMin:0,\n            xScale:undefined,yScale:undefined\n        }\n\n    },\n    computed:{\n        graphData(){\n            var cloned= [...this.dataGroup]\n            return cloned.sort((a,b)=>d3.ascending(a[this.xAxisName],b[this.xAxisName]))\n        }\n    },\n    methods:{\n        addLabel(){\n            d3.select('svg').append('text').classed('x-label',true)\n            .attr('transform',`translate(${this.width-this.margin.horizontal*1.5},${this.height-this.margin.vertical})`)\n            .text('cost').style('fill','#F1F5FB').style('font-size','10px')\n\n\n            d3.select('svg').append('text').classed('y-label',true)\n            .attr('transform',`translate(${0},${this.margin.vertical/2})`)\n            .text(this.yAxisName).style('fill','#F1F5FB').style('font-size','10px')\n        },\n        defineDataKeys(){\n            console.log('datagroup was not loaded?',this.dataGroup)\n            // this.xAxisName=Object.keys(this.dataGroup[0][0])[0];\n            // this.yAxisName=Object.keys(this.dataGroup[0][0])[1];\n        },\n        // \n        createAxis(){\n\n            var xExtents =[] ;\n            \n            this.graphData.forEach((d)=>{\n                var subArr = d;\n                var extents = subArr.map(t=>t[this.xAxisName]);\n                xExtents.push(extents)\n            })\n\n            var maxXvals =[];\n\n            xExtents.forEach((t)=>{\n                maxXvals.push(d3.max(t))\n            });\n            \n            var yExtents = [];\n            \n            this.graphData.forEach((d)=>{\n                var subArr = d;\n                var extents = subArr.map(t=>t[this.yAxisName]);\n                yExtents.push(extents)\n            })\n\n            var maxYvals=[];\n            yExtents.forEach((t)=>{\n                maxYvals.push(d3.max(t))\n            });\n\n            this.xMax= d3.max(maxXvals);\n            this.yMax= d3.max(maxYvals);\n\n            console.log(this.xMax,this.yMax)\n\n            this.xScale = d3.scaleLinear().domain([this.xMin,this.xMax]).range([this.margin.horizontal,this.width-this.margin.horizontal*2])\n            this.yScale = d3.scaleLinear().domain([this.yMin,this.yMax]).range([this.height-this.margin.vertical,this.margin.vertical]);\n            \n            const xAxis = d3.axisBottom(this.xScale);\n            const yAxis = d3.axisLeft(this.yScale);\n\n            d3.select('.x-axis').transition().duration(1000).call(xAxis.tickSize(0))\n            d3.select('.y-axis').transition().duration(1000).call(yAxis.tickSize(-this.width+this.margin.horizontal*2).ticks(10))\n            d3.select('.y-axis > .domain').remove()\n            d3.selectAll('.y-axis > .tick > line').style('stroke-width',0.5).style('opacity',0.2).style(\"stroke-dasharray\", (\"2, 2\"))\n            d3.select('.x-axis').style('color','#F1F5FB')\n            d3.select('.y-axis').style('color','#F1F5FB')\n            d3.selectAll('.domain').style('stroke-width',0.5)\n        },\n        line(){\n            return d3.line()\n            .x(d=>this.xScale(d[this.xAxisName]))\n            .y(d=>this.yScale(d[this.yAxisName]))\n        },\n        drawLines(linedata,index){\n            // this line function will interate graphData and plot line graphs one by one\n            if(index==0){\n\n            var path = d3.select('#line-chart')\n            .append('path')\n            .attr('class','graph-line')\n            .classed(`${index}-line`,true)\n            .attr('d',this.line()(linedata))\n            .attr('stroke',this.lineColors[index])\n            .attr('stroke-width',1)\n            .attr('fill','none')\n            .style('opacity',0)\n\n            if(path.node()){\n            var pathLength = path.node().getTotalLength();\n            console.log(pathLength)\n\n            path.attr('stroke-dasharray',pathLength)\n            .attr('stroke-dashoffset',pathLength)\n            .transition()\n            .duration(1000)\n            .attr('stroke-dashoffset',0)\n            .style('opacity',1)\n            }\n            \n            }else{\n            d3.select('#line-chart')\n            .append('path')\n            .attr('class','graph-line')\n            .classed(`${index}-line`,true)\n            .attr('d',this.line()(linedata))\n            .attr('stroke',this.lineColors[index])\n            .attr('stroke-width',1)\n            .attr('fill','none')\n            }\n            this.addLabel()\n\n        },\n        clearLines(){\n            d3.selectAll('.graph-line').remove()\n        }\n    },\n    created(){\n\n        const unwatch = this.$watch(\n            ()=>this.dataGroup,\n            data =>{\n                if(data){\n                    this.defineDataKeys();\n                    this.createAxis();\n                    \n                    this.graphData.forEach((d,i)=>{\n                        this.drawLines(d,i)\n                    })\n                    \n                    unwatch()\n                }\n            }\n        )\n\n    },\n    updated(){\n\n        this.createAxis();\n        this.clearLines();\n        this.graphData.forEach((d,i)=>{\n            this.drawLines(d,i)\n        })\n\n    }\n}\n</script>\n<style>\n\n</style>"]}]}